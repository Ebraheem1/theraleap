(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{103:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "main[data-v-24ac9cde],section[data-v-24ac9cde]{width:100%;height:100%}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2E2ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJtYWluW2RhdGEtdi0yNGFjOWNkZV0sc2VjdGlvbltkYXRhLXYtMjRhYzljZGVde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///103\n')},104:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(103);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"d552756c\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2U1NDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP21pbmltaXplIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTI0YWM5Y2RlXFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJzb3VyY2VNYXBcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcImQ1NTI3NTZjXCIsIGNvbnRlbnQsIHRydWUsIHt9KTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///104\n")},111:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/imports-loader?THREE=three!./node_modules/three/examples/js/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(110);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(99);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js\nvar fromEvent = __webpack_require__(190);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Subject.js + 1 modules\nvar Subject = __webpack_require__(32);\n\n// EXTERNAL MODULE: ./node_modules/inversify/lib/inversify.js\nvar inversify = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/underscore/underscore.js\nvar underscore = __webpack_require__(109);\n\n// EXTERNAL MODULE: ./node_modules/leapjs/lib/index.js\nvar lib = __webpack_require__(108);\n\n// EXTERNAL MODULE: ./src/dependencyinjection/symbols.ts\nvar symbols = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/devices/leapmotion/leapdriver.ts\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\nconst LEAP_MOTION_DEVICE_NAME = "Leap Motion";\nlet leapdriver_LeapDriver = class LeapDriver {\n    constructor(controllerSettings) {\n        this.controllerSettings = controllerSettings;\n        this.deviceName = LEAP_MOTION_DEVICE_NAME;\n        this.connectionActive = false;\n        this.controller = new lib["Controller"](controllerSettings);\n        this.controller.on("connect", () => (this.connectionActive = true));\n        this.controller.on("disconnect", () => (this.connectionActive = false));\n        this.controller.on("deviceConnected", () => (this.deviceConnected = true));\n        this.controller.on("deviceDisconnected", () => (this.deviceConnected = false));\n        this.outputSubject = new Subject["a" /* Subject */]();\n        this.frameStreamSubscription = Object(fromEvent["a" /* fromEvent */])(this.controller, "frame").subscribe(this.outputSubject);\n    }\n    async isLeapServerRunning(maxWaitTimeInMs) {\n        return new Promise((resolve, reject) => {\n            const sock = new WebSocket(`ws://${this.controllerSettings.host}:${this.controllerSettings.port}`);\n            const hdl = window.setTimeout(() => {\n                if (sock.readyState === sock.OPEN) {\n                    resolve(true);\n                    sock.close();\n                }\n                else {\n                    resolve(false);\n                }\n            }, maxWaitTimeInMs);\n            sock.onerror = () => {\n                resolve(false);\n                window.clearTimeout(hdl);\n            };\n        });\n    }\n    enableClassification(classifiers) {\n        // TODO implement non threaded classification\n        throw "Not Implemented";\n    }\n    getClassificationData() {\n        // TODO classification is not yet supported by the non threaded driver.\n        return undefined;\n    }\n    async getDeviceConnectionState() {\n        return {\n            nativeDeviceDriverOnline: await this.isLeapServerRunning(1000),\n            connectedToNativeDeviceDriver: this.connectionActive,\n            deviceHardwareConnected: this.connectionActive\n                ? this.controller.streaming()\n                : undefined\n        };\n    }\n    establishConnection(monitoringInterval = 1500) {\n        this.monitor = Observable["a" /* Observable */].create(async (observer) => {\n            this.connect();\n            let previousConnectionState = await this.getDeviceConnectionState();\n            observer.next(previousConnectionState);\n            window.setInterval(async () => {\n                let connectionState = await this.getDeviceConnectionState();\n                if (!Object(underscore["isEqual"])(connectionState, previousConnectionState)) {\n                    previousConnectionState = connectionState;\n                    this.connect();\n                    observer.next(connectionState);\n                }\n            }, monitoringInterval);\n        });\n        return this.monitor;\n    }\n    streamConnectionState() {\n        return this.monitor;\n    }\n    getTrackingData() {\n        return this.outputSubject;\n    }\n    async connect() {\n        this.controller.disconnect();\n        return new Promise((resolve) => {\n            this.controller.once("connect", () => {\n                this.connectionActive = true;\n                resolve(true);\n            });\n            this.controller.connect();\n        });\n    }\n    updatePreProcessors(configs) {\n        return false;\n    }\n    updateClassifier(config) {\n        return false;\n    }\n    digest(data) {\n        this.outputSubject.next(data);\n    }\n};\nleapdriver_LeapDriver = __decorate([\n    Object(inversify["injectable"])(),\n    __param(0, Object(inversify["inject"])(symbols["a" /* default */].SETTINGS_HARDWARE_DRIVER_CONNECTION)),\n    __metadata("design:paramtypes", [Object])\n], leapdriver_LeapDriver);\n\n\n// EXTERNAL MODULE: ./src/state/modules/graphics.ts\nvar graphics = __webpack_require__(96);\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/utils.ts\n\n/**\n * Compares an incoming Leap Motion Frame to the current state of the Scene.\n * If the incoming Frame does NOT contain objects that ARE currently painted in\n * the scene, delete them from the scene and clean up the internal state.\n * @param frame The Frame to compare to\n * @param scene The current multihand scene state\n */\nfunction deleteStaleHands(frame, scene) {\n    const shownHands = frame.data.hands.map(hand => hand.type);\n    const validHands = {};\n    /** Delete the Hand Objects that are not in this frame from the native THREE scene */\n    Object.entries(scene.hands).forEach(([type, sceneHand]) => {\n        if (!shownHands.includes(type)) {\n            scene.nativeSceneRef.remove(sceneHand.palm, ...Object.values(sceneHand.fingers));\n        }\n    });\n    /** Build and return new HandScenes containing only the valid (i.e., contained in this frame) Scenes */\n    shownHands.forEach((shownHand) => {\n        if (scene.hands.hasOwnProperty(shownHand)) {\n            validHands[shownHand] = scene.hands[shownHand];\n        }\n    });\n    return validHands;\n}\n/**\n * Based on the ProjectionBox coming from the Device, update the scene states\n * projection matrix accordingly. This Matrix is used in order to cast the point data\n * coming from the device into the correct coordinate system used by the graphical logger\n * @param iBox The Interactionbox coming from the device\n * @param scene The Scene state to alter\n */\nfunction setProjection(iBox, scene) {\n    const min = [];\n    const max = [];\n    for (let i in [0, 1, 2]) {\n        min.push(iBox.center[i] - iBox.size[i] / 2);\n        max.push(iBox.center[i] + iBox.size[i] / 2);\n    }\n    scene.projectionFrom = { min, max };\n    scene.projectionTo = { min: [0, 0, 0], max: [50, 50, 50] };\n}\n/**\n * Create a 3d THREE Vector Object pointing from the center of the\n * THREE Coordinate System to the coordinate (10, 10, 10). Used to\n * initialize Vector Objects\n */\nfunction makeLineVector() {\n    return new three_module["Line"](new three_module["Geometry"]().setFromPoints([\n        new three_module["Vector3"](0, 0, 0),\n        new three_module["Vector3"](10, 10, 10)\n    ]), new three_module["LineBasicMaterial"]({ color: 0xff0000 }));\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/util.ts\n/**\n * Project a value from one number range onto another one.\n * Establishes a proportion between the two number ranges and returns the proportion\n * applied to the new range.\n * @param value value to be projected\n * @param min minimum value of the input value\n * @param max maximum value of the input value\n * @param targetMin minimum value of the projected plane\n * @param targetMax maximum value of the projected plane\n */\nfunction project(value, min, max, targetMin, targetMax) {\n    return targetMin + (targetMax - targetMin) * ((value - min) / (max - min));\n}\n/**\n * Project a 3 Dimensional Vector from one plane into another one, as described\n * by the from / to projection matrices.\n * @param vector3 The Vector to be projected into a new plane\n * @param projection  The Projection Matrix\n */\nfunction project3(vector3, projection) {\n    const projected = [];\n    for (let i in [0, 1, 2]) {\n        projected.push(project(vector3[i], projection.projectionFrom.min[i], projection.projectionFrom.max[i], projection.projectionTo.min[i], projection.projectionTo.max[i]));\n    }\n    return projected;\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/palm.ts\n\n\nfunction initializePalm(type, config) {\n    const mesh = new three_module["Object3D"]();\n    const geometry = new three_module["CircleBufferGeometry"](10, 32, 0, 2 * Math.PI);\n    mesh.add(new three_module["Mesh"](geometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    if (config.drawWireFrame) {\n        mesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](geometry), new three_module["LineBasicMaterial"]({\n            color: 0xffffff,\n            transparent: true,\n            opacity: 0.5\n        })));\n    }\n    return {\n        palm: mesh,\n        fingers: {},\n        palmNormalVector: undefined,\n        palmDirectionalVector: undefined,\n        config\n    };\n}\nfunction updatePalmPosition(hand, scene) {\n    const [x, y, z] = project3(hand.palmPosition, scene);\n    scene.hands[hand.type].palm.position.set(x, y, z);\n    return [x, y, z];\n}\nfunction updatePalmAlign(hand, scene) {\n    const normal = new three_module["Vector3"](...hand.palmNormal);\n    scene.hands[hand.type].palm.children.forEach(mesh => {\n        mesh.lookAt(normal);\n    });\n}\nfunction updatePalmNormalVector(hand, palmPosition, scene) {\n    const normal = scene.hands[hand.type].palmNormalVector;\n    if (normal) {\n        const geometry = normal.geometry;\n        geometry.vertices = [\n            new three_module["Vector3"](0, 0, 0),\n            new three_module["Vector3"](...hand.palmNormal.map(x => x * 50))\n        ];\n        geometry.verticesNeedUpdate = true;\n        normal.position.set.apply(normal.position, ...palmPosition);\n    }\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/finger.ts\n\n\n\n/**\n * Create a new Finger Object and add it to the internal scene state\n * @param finger Leap Pointable data on which basis the Finger Mesh shall be created\n * @param scene The internal scene state\n */\nfunction initializeFinger(finger, scene, config) {\n    const fingerMesh = new three_module["Object3D"]();\n    const fingerTubeGeometry = getFingerTubeGeometry(finger, scene);\n    fingerMesh.add(new three_module["Mesh"](fingerTubeGeometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    fingerMesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](fingerTubeGeometry), new three_module["LineBasicMaterial"]({\n        color: 0xffffff,\n        transparent: true,\n        opacity: 0.5\n    })));\n    return fingerMesh;\n}\n/**\n * Update the Finger painted on screen.\n * @param pointable New Data\n * @param fingerMesh Existing Finger Mesh\n * @param scene Scene State\n */\nfunction updateFinger(pointable, fingerMesh, scene) {\n    const fingerTube = getFingerTubeGeometry(pointable, scene);\n    const oldTube = fingerMesh.children[0]\n        .geometry;\n    oldTube.copy(fingerTube);\n    if (fingerMesh.children.length > 1) {\n        const oldWireFrame = fingerMesh.children[1]\n            .geometry;\n        oldWireFrame.copy(new three_module["WireframeGeometry"](fingerTube));\n    }\n}\n/**\n * Convert a Leap Pointable as coming from the device into a BufferTubeGeometry,\n * optionally smoothed by a CatmullRomCurve.\n * @param p The Leap Pointable\n * @param scene The Scene State\n */\nfunction getFingerTubeGeometry(p, scene) {\n    return new three_module["TubeBufferGeometry"](new three_module["CatmullRomCurve3"]([p.mcpPosition, p.pipPosition, p.dipPosition, p.tipPosition].map(pos => new three_module["Vector3"](...project3(pos, scene)))), 20, 2, 8, false);\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/index.ts\n\n\n\n/**\n * Object containing the Default Hand Configuration.\n */\nconst DefaultHandConfig = {\n    mainColor: 0x156289,\n    emissiveColor: 0x072534,\n    drawWireFrame: true,\n    drawDirectionalVector: true,\n    drawNormalVector: true\n};\nfunction initializeScene(nativeSceneRef) {\n    return { nativeSceneRef, hands: {} };\n}\nfunction render(frame, scene, config) {\n    const mergedConfig = Object.assign({}, DefaultHandConfig, config);\n    setProjection(frame.data.interactionBox, scene);\n    scene.hands = deleteStaleHands(frame, scene);\n    frame.data.hands.forEach(hand => {\n        renderHand(hand, scene, mergedConfig);\n        frame.data.pointables\n            .filter(pointable => pointable.handId === hand.id)\n            .forEach(pointable => {\n            renderFinger(hand.type, pointable, scene, mergedConfig);\n        });\n    });\n}\nfunction renderHand(hand, scene, config) {\n    if (!scene.hands[hand.type]) {\n        scene.hands[hand.type] = initializePalm(hand.type, config);\n        scene.nativeSceneRef.add(scene.hands[hand.type].palm);\n    }\n    const position = updatePalmPosition(hand, scene);\n    updatePalmAlign(hand, scene);\n    updatePalmNormalVector(hand, position, scene);\n    //updatePalmDirectionalVector(hand, scene);\n}\nfunction renderFinger(type, pointable, scene, config) {\n    let fingers = scene.hands[type].fingers;\n    if (!fingers[pointable.type]) {\n        fingers[pointable.type] = initializeFinger(pointable, scene, config);\n        scene.nativeSceneRef.add(fingers[pointable.type]);\n    }\n    updateFinger(pointable, fingers[pointable.type], scene);\n}\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar GraphicalHandLogger_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\n\nlet GraphicalHandLogger_GraphicalHandLogger = class GraphicalHandLogger extends vue_runtime_esm["default"] {\n    constructor() {\n        super(...arguments);\n        this.scene = new three_module["Scene"]();\n    }\n    mounted() {\n        this.initializeRenderer();\n        this.initializeGraphics();\n        this.setupWindowResizeListener();\n        this.setupDataStream();\n        this.animate();\n    }\n    setupWindowResizeListener() {\n        window.addEventListener("resize", this.fixAspectRatioOnResize, false);\n    }\n    removeWindowResizeListener() {\n        window.removeEventListener("resize", this.fixAspectRatioOnResize);\n    }\n    fixAspectRatioOnResize() {\n        const animation = this.$refs.animation;\n        if (this.camera && animation) {\n            this.camera.aspect = animation.clientWidth / animation.clientHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        }\n    }\n    beforeDestroy() {\n        if (this.animationHandle) {\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n        this.removeWindowResizeListener();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    setupDataStream() {\n        const name = this.deviceFacade.getDeviceDriver().deviceName;\n        if (name == LEAP_MOTION_DEVICE_NAME) {\n            if (!this.multiHandScene) {\n                this.multiHandScene = initializeScene(this.scene);\n            }\n            if (this.subscription) {\n                this.subscription.unsubscribe();\n            }\n            this.subscription = this.source.subscribe(frame => {\n                render(frame, this.multiHandScene, this.handConfig);\n            });\n        }\n        else {\n            console.warn("Can\'t plot hand tracking data from unsupported device:", name);\n        }\n    }\n    initializeRenderer() {\n        if (!this.renderer) {\n            graphics["c" /* setRenderer */](this.$store, new three_module["WebGLRenderer"]({ antialias: true, alpha: true }));\n        }\n    }\n    initializeGraphics() {\n        let animation = this.$refs.animation;\n        this.camera = new three_module["PerspectiveCamera"](75, animation.clientWidth / animation.clientHeight, 0.1, 1000);\n        this.camera.position.set.apply(this.camera.position, this.cameraPosition);\n        this.controls = new three_module["OrbitControls"](this.camera, animation);\n        this.controls.autoRotateSpeed = 0.5;\n        this.controls.autoRotate = this.rotate;\n        this.controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        this.controls.dampingFactor = 0.25;\n        this.controls.minDistance = 100;\n        this.controls.maxDistance = 500;\n        var lights = [];\n        lights[0] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[1] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[2] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[0].position.set(0, 200, 0);\n        lights[1].position.set(100, 200, 100);\n        lights[2].position.set(-100, -200, -100);\n        this.scene.add(lights[0], lights[1], lights[2]);\n        this.renderer.setClearColor(0xffffff, 0);\n        this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        animation.appendChild(this.renderer.domElement);\n        if (this.transparent) {\n            this.scene.background = new three_module["Color"](0xffffff);\n        }\n        else {\n            this.scene.background = new three_module["Color"](this.background);\n        }\n        if (this.grid) {\n            let axisHelper = new three_module["GridHelper"](100, 10);\n            this.scene.add(axisHelper);\n        }\n    }\n    animate() {\n        this.animationHandle = window.requestAnimationFrame(this.animate);\n        if (this.renderer && this.camera) {\n            if (this.controls) {\n                this.controls.update();\n            }\n            this.renderer.render(this.scene, this.camera);\n        }\n        else {\n            console.warn("THREE.js not initialized properly");\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n    }\n    get renderer() {\n        return graphics["a" /* getRenderer */](this.$store);\n    }\n    get deviceFacade() {\n        return device["e" /* getDeviceFacade */](this.$store);\n    }\n};\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "transparent", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: 0x0 }),\n    GraphicalHandLogger_metadata("design:type", Number)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "background", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: true }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "grid", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "rotate", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => [0, 0, 0] }),\n    GraphicalHandLogger_metadata("design:type", Array)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "cameraPosition", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => { } }),\n    GraphicalHandLogger_metadata("design:type", Object)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "handConfig", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])(),\n    GraphicalHandLogger_metadata("design:type", Observable["a" /* Observable */])\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "source", void 0);\nGraphicalHandLogger_GraphicalHandLogger = GraphicalHandLogger_decorate([\n    Object(vue_property_decorator["a" /* Component */])({})\n], GraphicalHandLogger_GraphicalHandLogger);\n/* harmony default export */ var graphics_GraphicalHandLogger = (GraphicalHandLogger_GraphicalHandLogger);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-24ac9cde","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',[_c(\'main\',{ref:"animation",staticClass:"three-container"})])}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/graphics/GraphicalHandLogger.vue\nfunction injectStyle (context) {\n  __webpack_require__(104)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-24ac9cde"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  graphics_GraphicalHandLogger,\n  GraphicalHandLogger_render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_graphics_GraphicalHandLogger = __webpack_exports__["a"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///111\n')},145:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".md-card[data-v-55927630]{margin-bottom:20px;max-width:800px}.container[data-v-55927630],.header-flex-container[data-v-55927630]{display:flex}.container .form[data-v-55927630]{flex:2}.container .preview[data-v-55927630]{flex:3;height:250px;width:450px}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL3JlY29yZGVyL0RldmljZVJlY29yZGVyLnZ1ZT9mMWRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm1kLWNhcmRbZGF0YS12LTU1OTI3NjMwXXttYXJnaW4tYm90dG9tOjIwcHg7bWF4LXdpZHRoOjgwMHB4fS5jb250YWluZXJbZGF0YS12LTU1OTI3NjMwXSwuaGVhZGVyLWZsZXgtY29udGFpbmVyW2RhdGEtdi01NTkyNzYzMF17ZGlzcGxheTpmbGV4fS5jb250YWluZXIgLmZvcm1bZGF0YS12LTU1OTI3NjMwXXtmbGV4OjJ9LmNvbnRhaW5lciAucHJldmlld1tkYXRhLXYtNTU5Mjc2MzBde2ZsZXg6MztoZWlnaHQ6MjUwcHg7d2lkdGg6NDUwcHh9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///145\n')},146:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(145);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"43805f95\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL3JlY29yZGVyL0RldmljZVJlY29yZGVyLnZ1ZT82MWMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9taW5pbWl6ZSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi01NTkyNzYzMFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9EZXZpY2VSZWNvcmRlci52dWVcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiNDM4MDVmOTVcIiwgY29udGVudCwgdHJ1ZSwge30pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///146\n")},177:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/sizeof/index.js\nvar sizeof = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./src/state/modules/record.ts\nvar record = __webpack_require__(25);\n\n// EXTERNAL MODULE: ./src/ui/graphics/GraphicalHandLogger.vue + 8 modules\nvar GraphicalHandLogger = __webpack_require__(111);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/state/modules/persistor.ts\nvar persistor = __webpack_require__(95);\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/recorder/DeviceRecorder.vue\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n//@ts-ignore\n\n\n\n\n\n/** Device Recorder\n *  Component that makes it possible to record data sent from the device,\n *  save it locally, and play it back in an infinite loop. This is a convenience\n *  component to make it easier to develop games for the frameworks without having\n *  the leap motion device attached and running permanently.\n */\nlet DeviceRecorder_DeviceRecorder = class DeviceRecorder extends vue_runtime_esm["default"] {\n    /** Device Recorder\n     *  Component that makes it possible to record data sent from the device,\n     *  save it locally, and play it back in an infinite loop. This is a convenience\n     *  component to make it easier to develop games for the frameworks without having\n     *  the leap motion device attached and running permanently.\n     */\n    constructor() {\n        super(...arguments);\n        this.recordInProgress = false;\n        this.bufferFullPercentage = 0;\n        this.showRestore = false;\n        this.persistedRecordings = 0;\n        this.restoreInProgress = false;\n        this.buffer = [];\n        this.currentBufferSize = 0;\n        this.bufferMaxSize = 0.2e8;\n    }\n    createNewEmptyRecording() {\n        this.clearLocalState();\n        return Object(record["a" /* addRecording */])(this.$store, {\n            recording: {\n                name: `Recording #${this.totalRecordings + 1}`,\n                id: this.totalRecordings + 1,\n                recording: [],\n                created: false,\n                creationDate: Date.now(),\n                size: 0,\n                duration: 0\n            },\n            persistor: this.persistor\n        });\n    }\n    async created() {\n        if (this.persistor && this.totalRecordings === 0) {\n            const count = await this.persistor.count();\n            if (count > 0) {\n                this.persistedRecordings = count;\n                this.showRestore = true;\n            }\n        }\n    }\n    async restoreRecordings() {\n        if (this.persistor) {\n            this.restoreInProgress = true;\n            const recordings = await this.persistor.getAll();\n            recordings.forEach(recording => {\n                Object(record["a" /* addRecording */])(this.$store, { recording, persistor: undefined });\n            });\n            this.restoreInProgress = false;\n            this.showRestore = false;\n        }\n    }\n    /**\n     * Called by the Template when the Record Button is pressed\n     * @argument id the Id for which to record\n     */\n    startRecord(id) {\n        this.recordInProgress = true;\n        if (this.deviceTrackingData) {\n            this.deviceSubscription = this.deviceTrackingData.subscribe(frame => {\n                const newBufferSize = this.updateBuffer(frame, Date.now());\n                this.update(id, {\n                    size: newBufferSize,\n                    duration: this.getBufferDuration()\n                });\n                if (newBufferSize > this.bufferMaxSize) {\n                    this.stopRecord();\n                }\n            });\n        }\n    }\n    downloadRecord(id) {\n        const obj = this.recordings[id];\n        const data = new Blob([JSON.stringify(obj)], { type: \'octet/stream\' });\n        const url = URL.createObjectURL(data);\n        const anchor = document.createElement(\'a\');\n        anchor.download = `thera-rec--${obj.name.replace(/\\s/g, \'-\')}.json`;\n        anchor.href = url;\n        anchor.target = \'_blank\';\n        anchor.setAttribute(\'display\', \'none;\');\n        document.body.appendChild(anchor);\n        anchor.click();\n    }\n    clearLocalState() {\n        this.buffer = [];\n        this.currentBufferSize = 0;\n        this.bufferFullPercentage = 0;\n    }\n    updateBuffer(frame, recordedTime) {\n        this.currentBufferSize += Object(sizeof["sizeof"])(frame.data);\n        this.bufferFullPercentage =\n            this.currentBufferSize / this.bufferMaxSize * 100;\n        this.buffer.push({ data: { data: frame.data }, time: recordedTime });\n        return this.currentBufferSize;\n    }\n    getBufferDuration() {\n        if (this.buffer && this.buffer.length >= 2) {\n            return this.buffer[this.buffer.length - 1].time - this.buffer[0].time;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Called by the Template when the Stop Button is pressed\n     */\n    stopRecord() {\n        if (this.deviceSubscription) {\n            this.deviceSubscription.unsubscribe();\n        }\n        this.recordInProgress = false;\n    }\n    /**\n     * Called by the Template when the Save Button is pressed\n     * @argument id the Id for which to save\n     */\n    saveRecord(id) {\n        this.stopRecord();\n        Object(record["n" /* updateRecording */])(this.$store, {\n            id,\n            update: { created: true, recording: this.buffer },\n            persistor: this.persistor\n        });\n        this.clearLocalState();\n    }\n    /**\n     * Called by the Template when the Discard Button is pressed\n     * @argument id the Id for which to discard\n     */\n    discardRecord(id) {\n        this.stopRecord();\n        this.clearLocalState();\n        Object(record["c" /* deleteRecording */])(this.$store, { id, persistor: this.persistor });\n    }\n    toggleActivated(id) {\n        this.activatedId == id\n            ? Object(record["l" /* setActivatedId */])(this.$store, -1)\n            : Object(record["l" /* setActivatedId */])(this.$store, id);\n    }\n    update(id, update) {\n        Object(record["n" /* updateRecording */])(this.$store, { id, update });\n    }\n    get persistor() {\n        return Object(persistor["a" /* getPersistor */])(this.$store);\n    }\n    get recordings() {\n        return Object(record["g" /* getRecordings */])(this.$store);\n    }\n    get recordingsSortedDescending() {\n        return Object(record["h" /* getRecordingsSortedDescending */])(this.$store);\n    }\n    get recordInCreation() {\n        return Object(record["j" /* hasRecordInCreation */])(this.$store);\n    }\n    get activatedId() {\n        return Object(record["d" /* getActivatedId */])(this.$store);\n    }\n    get totalRecordings() {\n        return Object(record["i" /* getTotalRecordings */])(this.$store);\n    }\n    get connectionHealthy() {\n        return Object(device["b" /* getConnectionHealthy */])(this.$store);\n    }\n    get deviceFacade() {\n        return Object(device["e" /* getDeviceFacade */])(this.$store);\n    }\n    get deviceTrackingData() {\n        return this.deviceFacade.getDeviceTrackingData();\n    }\n};\nDeviceRecorder_DeviceRecorder = __decorate([\n    Object(vue_property_decorator["a" /* Component */])({\n        components: { GraphicalHandLogger: GraphicalHandLogger["a" /* default */] },\n        filters: {\n            formatSize: sizeof["format"]\n        }\n    })\n], DeviceRecorder_DeviceRecorder);\n/* harmony default export */ var recorder_DeviceRecorder = (DeviceRecorder_DeviceRecorder);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-55927630","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/recorder/DeviceRecorder.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',{staticClass:"device-recorder"},[(_vm.restoreInProgress)?_c(\'div\',[_c(\'span\',[_vm._v("Restoring data from persistence layer...")]),_vm._v(" "),_c(\'md-progress-bar\',{attrs:{"md-mode":"indeterminate"}})],1):_vm._e(),_vm._v(" "),(_vm.totalRecordings == 0)?_c(\'md-empty-state\',{attrs:{"md-icon":"mic","md-label":"Create your first recording","md-description":"Create recordings of raw hand tracking data in order to develop and test games for the therapy platform without the physical need of a hand tracking device."}},[_c(\'md-button\',{staticClass:"md-primary md-raised",on:{"click":_vm.createNewEmptyRecording}},[_vm._v("Create first recording")])],1):_c(\'main\',[_c(\'md-button\',{staticClass:"md-icon-button md-primary",attrs:{"disabled":_vm.recordInCreation},on:{"click":_vm.createNewEmptyRecording}},[_c(\'md-icon\',[_vm._v("add")])],1),_vm._v(" "),_vm._l((_vm.recordingsSortedDescending),function(record){return _c(\'md-card\',{key:record.id,attrs:{"md-with-hover":""}},[_c(\'md-card-header\',{staticClass:"header-flex-container"},[_c(\'section\',{staticClass:"header-left"},[_c(\'div\',{staticClass:"md-title"},[_vm._v(_vm._s(record.name))]),_vm._v(" "),_c(\'div\',{staticClass:"md-subhead"},[_vm._v("Created "+_vm._s(record.creationDate))])]),_vm._v(" "),_c(\'section\',{staticClass:"header-right"},[_c(\'md-switch\',{attrs:{"model":_vm.activatedId == record.id,"disabled":!record.created},on:{"change":function($event){_vm.toggleActivated(record.id)}}})],1)]),_vm._v(" "),(record.created)?_c(\'md-card-content\'):_c(\'md-card-content\',[_c(\'div\',{staticClass:"container"},[_c(\'div\',{staticClass:"form"},[_c(\'md-field\',[_c(\'label\',[_vm._v("Name")]),_vm._v(" "),_c(\'md-input\',{attrs:{"value":record.name},on:{"input":function($event){_vm.update(record.id, {name: $event})}}})],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Size")]),_vm._v(" "),_c(\'md-input\',{attrs:{"value":_vm._f("formatSize")(record.size),"readonly":""}})],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Duration (milliseconds)")]),_vm._v(" "),_c(\'md-input\',{attrs:{"readonly":"","value":record.duration}})],1),_vm._v(" "),_c(\'md-progress-bar\',{attrs:{"md-mode":"determinate","md-value":_vm.bufferFullPercentage}}),_vm._v(" "),_c(\'md-button\',{attrs:{"disabled":!_vm.connectionHealthy || _vm.recordInProgress},on:{"click":function($event){_vm.startRecord(record.id)}}},[_vm._v("Record")]),_vm._v(" "),_c(\'md-button\',{attrs:{"disabled":!_vm.recordInProgress},on:{"click":_vm.stopRecord}},[_vm._v("Stop")])],1),_vm._v(" "),_c(\'div\',{staticClass:"preview"},[_c(\'graphical-hand-logger\',{attrs:{"source":_vm.deviceTrackingData,"transparent":true}})],1)])]),_vm._v(" "),_c(\'md-card-actions\',[(!record.created)?_c(\'md-button\',{staticClass:"md-raised md-primary",attrs:{"disabled":_vm.buffer.length === 0},on:{"click":function($event){_vm.saveRecord(record.id)}}},[_vm._v("Save")]):_vm._e(),_vm._v(" "),(!record.created)?_c(\'md-button\',{staticClass:"md-accent md-raised",on:{"click":function($event){_vm.discardRecord(record.id)}}},[_vm._v("Discard")]):_vm._e(),_vm._v(" "),(record.created)?_c(\'md-button\',{on:{"click":function($event){_vm.downloadRecord(record.id)}}},[_vm._v("Download")]):_vm._e(),_vm._v(" "),(record.created)?_c(\'md-button\',{staticClass:"md-accent",on:{"click":function($event){_vm.discardRecord(record.id)}}},[_vm._v("Delete")]):_vm._e()],1)],1)})],2),_vm._v(" "),_c(\'md-snackbar\',{attrs:{"md-position":"center","md-duration":Infinity,"md-active":_vm.showRestore,"md-persistent":""},on:{"update:mdActive":function($event){_vm.showRestore=$event}}},[_c(\'span\',[_vm._v("The Persistence Provider is holding "+_vm._s(_vm.persistedRecordings)+" recordings.")]),_vm._v(" "),_c(\'md-button\',{staticClass:"md-primary md-raised",on:{"click":_vm.restoreRecordings}},[_vm._v("Restore")]),_vm._v(" "),_c(\'md-button\',{staticClass:"md-raised",on:{"click":function($event){_vm.showRestore = false}}},[_vm._v("Dismiss")])],1)],1)}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/recorder/DeviceRecorder.vue\nfunction injectStyle (context) {\n  __webpack_require__(146)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-55927630"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  recorder_DeviceRecorder,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_recorder_DeviceRecorder = __webpack_exports__["default"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL3JlY29yZGVyL0RldmljZVJlY29yZGVyLnZ1ZT9jN2FiIiwid2VicGFjazovLy8uL3NyYy91aS9yZWNvcmRlci9EZXZpY2VSZWNvcmRlci52dWU/ZGM4MSIsIndlYnBhY2s6Ly8vLi9zcmMvdWkvcmVjb3JkZXIvRGV2aWNlUmVjb3JkZXIudnVlPzI5NWMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuaW1wb3J0IFZ1ZSBmcm9tIFwidnVlXCI7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwidnVlLXByb3BlcnR5LWRlY29yYXRvclwiO1xuXG4vL0B0cy1pZ25vcmVcbmltcG9ydCB7IGZvcm1hdCwgc2l6ZW9mIH0gZnJvbSBcInNpemVvZlwiO1xuXG5pbXBvcnQge1xuICBnZXRSZWNvcmRpbmdzU29ydGVkRGVzY2VuZGluZyxcbiAgZ2V0UmVjb3JkaW5ncyxcbiAgc2V0QWN0aXZhdGVkSWQsXG4gIGdldEFjdGl2YXRlZElkLFxuICBnZXRUb3RhbFJlY29yZGluZ3MsXG4gIHVwZGF0ZVJlY29yZGluZyxcbiAgYWRkUmVjb3JkaW5nLFxuICBIYW5kVHJhY2tSZWNvcmRpbmcsXG4gIGRlbGV0ZVJlY29yZGluZyxcbiAgUmVjb3JkLFxuICBoYXNSZWNvcmRJbkNyZWF0aW9uXG59IGZyb20gXCJAL3N0YXRlL21vZHVsZXMvcmVjb3JkXCI7XG5pbXBvcnQgR3JhcGhpY2FsSGFuZExvZ2dlciBmcm9tIFwiQC91aS9ncmFwaGljcy9HcmFwaGljYWxIYW5kTG9nZ2VyLnZ1ZVwiO1xuaW1wb3J0IHsgZ2V0Q29ubmVjdGlvbkhlYWx0aHksIGdldERldmljZUZhY2FkZSB9IGZyb20gXCJzdGF0ZS9tb2R1bGVzL2RldmljZVwiO1xuaW1wb3J0IHsgR2VuZXJpY0hhbmRUcmFja2luZ0RhdGEgfSBmcm9tIFwiZGV2aWNlc1wiO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSBcInJ4anNcIjtcbmltcG9ydCB7IGdldFBlcnNpc3RvciB9IGZyb20gXCJzdGF0ZS9tb2R1bGVzL3BlcnNpc3RvclwiO1xuXG4vKiogRGV2aWNlIFJlY29yZGVyXG4gKiAgQ29tcG9uZW50IHRoYXQgbWFrZXMgaXQgcG9zc2libGUgdG8gcmVjb3JkIGRhdGEgc2VudCBmcm9tIHRoZSBkZXZpY2UsXG4gKiAgc2F2ZSBpdCBsb2NhbGx5LCBhbmQgcGxheSBpdCBiYWNrIGluIGFuIGluZmluaXRlIGxvb3AuIFRoaXMgaXMgYSBjb252ZW5pZW5jZVxuICogIGNvbXBvbmVudCB0byBtYWtlIGl0IGVhc2llciB0byBkZXZlbG9wIGdhbWVzIGZvciB0aGUgZnJhbWV3b3JrcyB3aXRob3V0IGhhdmluZ1xuICogIHRoZSBsZWFwIG1vdGlvbiBkZXZpY2UgYXR0YWNoZWQgYW5kIHJ1bm5pbmcgcGVybWFuZW50bHkuXG4gKi9cbkBDb21wb25lbnQoe1xuICBjb21wb25lbnRzOiB7IEdyYXBoaWNhbEhhbmRMb2dnZXIgfSxcbiAgZmlsdGVyczoge1xuICAgIGZvcm1hdFNpemU6IGZvcm1hdFxuICB9XG59KVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGV2aWNlUmVjb3JkZXIgZXh0ZW5kcyBWdWUge1xuICBwdWJsaWMgcmVjb3JkSW5Qcm9ncmVzczogYm9vbGVhbiA9IGZhbHNlO1xuICBwdWJsaWMgYnVmZmVyRnVsbFBlcmNlbnRhZ2U6IG51bWJlciA9IDA7XG4gIHB1YmxpYyBzaG93UmVzdG9yZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwdWJsaWMgcGVyc2lzdGVkUmVjb3JkaW5nczogbnVtYmVyID0gMDtcbiAgcHVibGljIHJlc3RvcmVJblByb2dyZXNzOiBib29sZWFuID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBidWZmZXI6IFJlY29yZFtdID0gW107XG4gIHByaXZhdGUgY3VycmVudEJ1ZmZlclNpemU6IG51bWJlciA9IDA7XG4gIHByaXZhdGUgYnVmZmVyTWF4U2l6ZTogbnVtYmVyID0gMC4yZTg7XG5cbiAgcHJpdmF0ZSBkZXZpY2VTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbiB8IHVuZGVmaW5lZDtcblxuICBwdWJsaWMgY3JlYXRlTmV3RW1wdHlSZWNvcmRpbmcoKSB7XG4gICAgdGhpcy5jbGVhckxvY2FsU3RhdGUoKTtcbiAgICByZXR1cm4gYWRkUmVjb3JkaW5nKHRoaXMuJHN0b3JlLCB7XG4gICAgICByZWNvcmRpbmc6IHtcbiAgICAgICAgbmFtZTogYFJlY29yZGluZyAjJHt0aGlzLnRvdGFsUmVjb3JkaW5ncyArIDF9YCxcbiAgICAgICAgaWQ6IHRoaXMudG90YWxSZWNvcmRpbmdzICsgMSxcbiAgICAgICAgcmVjb3JkaW5nOiBbXSxcbiAgICAgICAgY3JlYXRlZDogZmFsc2UsXG4gICAgICAgIGNyZWF0aW9uRGF0ZTogRGF0ZS5ub3coKSxcbiAgICAgICAgc2l6ZTogMCxcbiAgICAgICAgZHVyYXRpb246IDBcbiAgICAgIH0sXG4gICAgICBwZXJzaXN0b3I6IHRoaXMucGVyc2lzdG9yXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgY3JlYXRlZCgpIHtcbiAgICBpZiAodGhpcy5wZXJzaXN0b3IgJiYgdGhpcy50b3RhbFJlY29yZGluZ3MgPT09IDApIHtcbiAgICAgIGNvbnN0IGNvdW50ID0gYXdhaXQgdGhpcy5wZXJzaXN0b3IuY291bnQoKTtcbiAgICAgIGlmIChjb3VudCA+IDApIHtcbiAgICAgICAgdGhpcy5wZXJzaXN0ZWRSZWNvcmRpbmdzID0gY291bnQ7XG4gICAgICAgIHRoaXMuc2hvd1Jlc3RvcmUgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBhc3luYyByZXN0b3JlUmVjb3JkaW5ncygpIHtcbiAgICBpZiAodGhpcy5wZXJzaXN0b3IpIHtcbiAgICAgIHRoaXMucmVzdG9yZUluUHJvZ3Jlc3MgPSB0cnVlO1xuICAgICAgY29uc3QgcmVjb3JkaW5ncyA9IGF3YWl0IHRoaXMucGVyc2lzdG9yLmdldEFsbCgpO1xuICAgICAgcmVjb3JkaW5ncy5mb3JFYWNoKHJlY29yZGluZyA9PiB7XG4gICAgICAgIGFkZFJlY29yZGluZyh0aGlzLiRzdG9yZSwgeyByZWNvcmRpbmcsIHBlcnNpc3RvcjogdW5kZWZpbmVkIH0pXG4gICAgICB9KTtcbiAgICAgIHRoaXMucmVzdG9yZUluUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvd1Jlc3RvcmUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2FsbGVkIGJ5IHRoZSBUZW1wbGF0ZSB3aGVuIHRoZSBSZWNvcmQgQnV0dG9uIGlzIHByZXNzZWRcbiAgICogQGFyZ3VtZW50IGlkIHRoZSBJZCBmb3Igd2hpY2ggdG8gcmVjb3JkXG4gICAqL1xuICBwdWJsaWMgc3RhcnRSZWNvcmQoaWQ6IG51bWJlcikge1xuICAgIHRoaXMucmVjb3JkSW5Qcm9ncmVzcyA9IHRydWU7XG4gICAgaWYgKHRoaXMuZGV2aWNlVHJhY2tpbmdEYXRhKSB7XG4gICAgICB0aGlzLmRldmljZVN1YnNjcmlwdGlvbiA9IHRoaXMuZGV2aWNlVHJhY2tpbmdEYXRhLnN1YnNjcmliZShmcmFtZSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld0J1ZmZlclNpemUgPSB0aGlzLnVwZGF0ZUJ1ZmZlcihmcmFtZSwgRGF0ZS5ub3coKSk7XG4gICAgICAgIHRoaXMudXBkYXRlKGlkLCB7XG4gICAgICAgICAgc2l6ZTogbmV3QnVmZmVyU2l6ZSxcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5nZXRCdWZmZXJEdXJhdGlvbigpXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAobmV3QnVmZmVyU2l6ZSA+IHRoaXMuYnVmZmVyTWF4U2l6ZSkge1xuICAgICAgICAgIHRoaXMuc3RvcFJlY29yZCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZG93bmxvYWRSZWNvcmQoaWQ6IG51bWJlcikge1xuICAgIGNvbnN0IG9iaiA9IHRoaXMucmVjb3JkaW5nc1tpZF1cbiAgICBjb25zdCBkYXRhID0gbmV3IEJsb2IoW0pTT04uc3RyaW5naWZ5KG9iaildLCB7dHlwZTogJ29jdGV0L3N0cmVhbSd9KTtcbiAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpO1xuICAgIGNvbnN0IGFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICBhbmNob3IuZG93bmxvYWQgPSBgdGhlcmEtcmVjLS0ke29iai5uYW1lLnJlcGxhY2UoL1xccy9nLCAnLScpfS5qc29uYDtcbiAgICBhbmNob3IuaHJlZiA9IHVybDtcbiAgICBhbmNob3IudGFyZ2V0ID0gJ19ibGFuayc7XG4gICAgYW5jaG9yLnNldEF0dHJpYnV0ZSgnZGlzcGxheScsICdub25lOycpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYW5jaG9yKTtcbiAgICBhbmNob3IuY2xpY2soKTtcbiAgfVxuXG4gIHByaXZhdGUgY2xlYXJMb2NhbFN0YXRlKCkge1xuICAgIHRoaXMuYnVmZmVyID0gW107XG4gICAgdGhpcy5jdXJyZW50QnVmZmVyU2l6ZSA9IDA7XG4gICAgdGhpcy5idWZmZXJGdWxsUGVyY2VudGFnZSA9IDA7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUJ1ZmZlcihcbiAgICBmcmFtZTogR2VuZXJpY0hhbmRUcmFja2luZ0RhdGEsXG4gICAgcmVjb3JkZWRUaW1lOiBudW1iZXJcbiAgKTogbnVtYmVyIHtcbiAgICB0aGlzLmN1cnJlbnRCdWZmZXJTaXplICs9IHNpemVvZihmcmFtZS5kYXRhKTtcbiAgICB0aGlzLmJ1ZmZlckZ1bGxQZXJjZW50YWdlID1cbiAgICAgIHRoaXMuY3VycmVudEJ1ZmZlclNpemUgLyB0aGlzLmJ1ZmZlck1heFNpemUgKiAxMDA7XG4gICAgdGhpcy5idWZmZXIucHVzaCh7IGRhdGE6IHsgZGF0YTogZnJhbWUuZGF0YSB9LCB0aW1lOiByZWNvcmRlZFRpbWUgfSk7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudEJ1ZmZlclNpemU7XG4gIH1cblxuICBwcml2YXRlIGdldEJ1ZmZlckR1cmF0aW9uKCk6IG51bWJlciB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHRoaXMuYnVmZmVyICYmIHRoaXMuYnVmZmVyLmxlbmd0aCA+PSAyKSB7XG4gICAgICByZXR1cm4gdGhpcy5idWZmZXJbdGhpcy5idWZmZXIubGVuZ3RoIC0gMV0udGltZSAtIHRoaXMuYnVmZmVyWzBdLnRpbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIENhbGxlZCBieSB0aGUgVGVtcGxhdGUgd2hlbiB0aGUgU3RvcCBCdXR0b24gaXMgcHJlc3NlZFxuICAgKi9cbiAgcHVibGljIHN0b3BSZWNvcmQoKSB7XG4gICAgaWYgKHRoaXMuZGV2aWNlU3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLmRldmljZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgICB0aGlzLnJlY29yZEluUHJvZ3Jlc3MgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxsZWQgYnkgdGhlIFRlbXBsYXRlIHdoZW4gdGhlIFNhdmUgQnV0dG9uIGlzIHByZXNzZWRcbiAgICogQGFyZ3VtZW50IGlkIHRoZSBJZCBmb3Igd2hpY2ggdG8gc2F2ZVxuICAgKi9cbiAgcHVibGljIHNhdmVSZWNvcmQoaWQ6IG51bWJlcikge1xuICAgIHRoaXMuc3RvcFJlY29yZCgpO1xuICAgIHVwZGF0ZVJlY29yZGluZyh0aGlzLiRzdG9yZSwge1xuICAgICAgaWQsXG4gICAgICB1cGRhdGU6IHsgY3JlYXRlZDogdHJ1ZSwgcmVjb3JkaW5nOiB0aGlzLmJ1ZmZlciB9LFxuICAgICAgcGVyc2lzdG9yOiB0aGlzLnBlcnNpc3RvclxuICAgIH0pO1xuICAgIHRoaXMuY2xlYXJMb2NhbFN0YXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogQ2FsbGVkIGJ5IHRoZSBUZW1wbGF0ZSB3aGVuIHRoZSBEaXNjYXJkIEJ1dHRvbiBpcyBwcmVzc2VkXG4gICAqIEBhcmd1bWVudCBpZCB0aGUgSWQgZm9yIHdoaWNoIHRvIGRpc2NhcmRcbiAgICovXG4gIHB1YmxpYyBkaXNjYXJkUmVjb3JkKGlkOiBudW1iZXIpIHtcbiAgICB0aGlzLnN0b3BSZWNvcmQoKTtcbiAgICB0aGlzLmNsZWFyTG9jYWxTdGF0ZSgpO1xuICAgIGRlbGV0ZVJlY29yZGluZyh0aGlzLiRzdG9yZSwgeyBpZCwgcGVyc2lzdG9yOiB0aGlzLnBlcnNpc3RvciB9KTtcbiAgfVxuXG4gIHB1YmxpYyB0b2dnbGVBY3RpdmF0ZWQoaWQ6IG51bWJlcikge1xuICAgIHRoaXMuYWN0aXZhdGVkSWQgPT0gaWRcbiAgICAgID8gc2V0QWN0aXZhdGVkSWQodGhpcy4kc3RvcmUsIC0xKVxuICAgICAgOiBzZXRBY3RpdmF0ZWRJZCh0aGlzLiRzdG9yZSwgaWQpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZShpZDogbnVtYmVyLCB1cGRhdGU6IFBhcnRpYWw8SGFuZFRyYWNrUmVjb3JkaW5nPikge1xuICAgIHVwZGF0ZVJlY29yZGluZyh0aGlzLiRzdG9yZSwgeyBpZCwgdXBkYXRlIH0pO1xuICB9XG5cbiAgZ2V0IHBlcnNpc3RvcigpIHtcbiAgICByZXR1cm4gZ2V0UGVyc2lzdG9yKHRoaXMuJHN0b3JlKTtcbiAgfVxuICBnZXQgcmVjb3JkaW5ncygpIHtcbiAgICByZXR1cm4gZ2V0UmVjb3JkaW5ncyh0aGlzLiRzdG9yZSk7XG4gIH1cbiAgZ2V0IHJlY29yZGluZ3NTb3J0ZWREZXNjZW5kaW5nKCkge1xuICAgIHJldHVybiBnZXRSZWNvcmRpbmdzU29ydGVkRGVzY2VuZGluZyh0aGlzLiRzdG9yZSk7XG4gIH1cbiAgZ2V0IHJlY29yZEluQ3JlYXRpb24oKSB7XG4gICAgcmV0dXJuIGhhc1JlY29yZEluQ3JlYXRpb24odGhpcy4kc3RvcmUpO1xuICB9XG4gIGdldCBhY3RpdmF0ZWRJZCgpIHtcbiAgICByZXR1cm4gZ2V0QWN0aXZhdGVkSWQodGhpcy4kc3RvcmUpO1xuICB9XG4gIGdldCB0b3RhbFJlY29yZGluZ3MoKSB7XG4gICAgcmV0dXJuIGdldFRvdGFsUmVjb3JkaW5ncyh0aGlzLiRzdG9yZSk7XG4gIH1cbiAgZ2V0IGNvbm5lY3Rpb25IZWFsdGh5KCkge1xuICAgIHJldHVybiBnZXRDb25uZWN0aW9uSGVhbHRoeSh0aGlzLiRzdG9yZSk7XG4gIH1cbiAgZ2V0IGRldmljZUZhY2FkZSgpIHtcbiAgICByZXR1cm4gZ2V0RGV2aWNlRmFjYWRlKHRoaXMuJHN0b3JlKTtcbiAgfVxuICBnZXQgZGV2aWNlVHJhY2tpbmdEYXRhKCkge1xuICAgIHJldHVybiB0aGlzLmRldmljZUZhY2FkZS5nZXREZXZpY2VUcmFja2luZ0RhdGEoKTtcbiAgfVxufVxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ3NlY3Rpb24nLHtzdGF0aWNDbGFzczpcImRldmljZS1yZWNvcmRlclwifSxbKF92bS5yZXN0b3JlSW5Qcm9ncmVzcyk/X2MoJ2RpdicsW19jKCdzcGFuJyxbX3ZtLl92KFwiUmVzdG9yaW5nIGRhdGEgZnJvbSBwZXJzaXN0ZW5jZSBsYXllci4uLlwiKV0pLF92bS5fdihcIiBcIiksX2MoJ21kLXByb2dyZXNzLWJhcicse2F0dHJzOntcIm1kLW1vZGVcIjpcImluZGV0ZXJtaW5hdGVcIn19KV0sMSk6X3ZtLl9lKCksX3ZtLl92KFwiIFwiKSwoX3ZtLnRvdGFsUmVjb3JkaW5ncyA9PSAwKT9fYygnbWQtZW1wdHktc3RhdGUnLHthdHRyczp7XCJtZC1pY29uXCI6XCJtaWNcIixcIm1kLWxhYmVsXCI6XCJDcmVhdGUgeW91ciBmaXJzdCByZWNvcmRpbmdcIixcIm1kLWRlc2NyaXB0aW9uXCI6XCJDcmVhdGUgcmVjb3JkaW5ncyBvZiByYXcgaGFuZCB0cmFja2luZyBkYXRhIGluIG9yZGVyIHRvIGRldmVsb3AgYW5kIHRlc3QgZ2FtZXMgZm9yIHRoZSB0aGVyYXB5IHBsYXRmb3JtIHdpdGhvdXQgdGhlIHBoeXNpY2FsIG5lZWQgb2YgYSBoYW5kIHRyYWNraW5nIGRldmljZS5cIn19LFtfYygnbWQtYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJtZC1wcmltYXJ5IG1kLXJhaXNlZFwiLG9uOntcImNsaWNrXCI6X3ZtLmNyZWF0ZU5ld0VtcHR5UmVjb3JkaW5nfX0sW192bS5fdihcIkNyZWF0ZSBmaXJzdCByZWNvcmRpbmdcIildKV0sMSk6X2MoJ21haW4nLFtfYygnbWQtYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJtZC1pY29uLWJ1dHRvbiBtZC1wcmltYXJ5XCIsYXR0cnM6e1wiZGlzYWJsZWRcIjpfdm0ucmVjb3JkSW5DcmVhdGlvbn0sb246e1wiY2xpY2tcIjpfdm0uY3JlYXRlTmV3RW1wdHlSZWNvcmRpbmd9fSxbX2MoJ21kLWljb24nLFtfdm0uX3YoXCJhZGRcIildKV0sMSksX3ZtLl92KFwiIFwiKSxfdm0uX2woKF92bS5yZWNvcmRpbmdzU29ydGVkRGVzY2VuZGluZyksZnVuY3Rpb24ocmVjb3JkKXtyZXR1cm4gX2MoJ21kLWNhcmQnLHtrZXk6cmVjb3JkLmlkLGF0dHJzOntcIm1kLXdpdGgtaG92ZXJcIjpcIlwifX0sW19jKCdtZC1jYXJkLWhlYWRlcicse3N0YXRpY0NsYXNzOlwiaGVhZGVyLWZsZXgtY29udGFpbmVyXCJ9LFtfYygnc2VjdGlvbicse3N0YXRpY0NsYXNzOlwiaGVhZGVyLWxlZnRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1kLXRpdGxlXCJ9LFtfdm0uX3YoX3ZtLl9zKHJlY29yZC5uYW1lKSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcIm1kLXN1YmhlYWRcIn0sW192bS5fdihcIkNyZWF0ZWQgXCIrX3ZtLl9zKHJlY29yZC5jcmVhdGlvbkRhdGUpKV0pXSksX3ZtLl92KFwiIFwiKSxfYygnc2VjdGlvbicse3N0YXRpY0NsYXNzOlwiaGVhZGVyLXJpZ2h0XCJ9LFtfYygnbWQtc3dpdGNoJyx7YXR0cnM6e1wibW9kZWxcIjpfdm0uYWN0aXZhdGVkSWQgPT0gcmVjb3JkLmlkLFwiZGlzYWJsZWRcIjohcmVjb3JkLmNyZWF0ZWR9LG9uOntcImNoYW5nZVwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnRvZ2dsZUFjdGl2YXRlZChyZWNvcmQuaWQpfX19KV0sMSldKSxfdm0uX3YoXCIgXCIpLChyZWNvcmQuY3JlYXRlZCk/X2MoJ21kLWNhcmQtY29udGVudCcpOl9jKCdtZC1jYXJkLWNvbnRlbnQnLFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJjb250YWluZXJcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImZvcm1cIn0sW19jKCdtZC1maWVsZCcsW19jKCdsYWJlbCcsW192bS5fdihcIk5hbWVcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdtZC1pbnB1dCcse2F0dHJzOntcInZhbHVlXCI6cmVjb3JkLm5hbWV9LG9uOntcImlucHV0XCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0udXBkYXRlKHJlY29yZC5pZCwge25hbWU6ICRldmVudH0pfX19KV0sMSksX3ZtLl92KFwiIFwiKSxfYygnbWQtZmllbGQnLFtfYygnbGFiZWwnLFtfdm0uX3YoXCJTaXplXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnbWQtaW5wdXQnLHthdHRyczp7XCJ2YWx1ZVwiOl92bS5fZihcImZvcm1hdFNpemVcIikocmVjb3JkLnNpemUpLFwicmVhZG9ubHlcIjpcIlwifX0pXSwxKSxfdm0uX3YoXCIgXCIpLF9jKCdtZC1maWVsZCcsW19jKCdsYWJlbCcsW192bS5fdihcIkR1cmF0aW9uIChtaWxsaXNlY29uZHMpXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnbWQtaW5wdXQnLHthdHRyczp7XCJyZWFkb25seVwiOlwiXCIsXCJ2YWx1ZVwiOnJlY29yZC5kdXJhdGlvbn19KV0sMSksX3ZtLl92KFwiIFwiKSxfYygnbWQtcHJvZ3Jlc3MtYmFyJyx7YXR0cnM6e1wibWQtbW9kZVwiOlwiZGV0ZXJtaW5hdGVcIixcIm1kLXZhbHVlXCI6X3ZtLmJ1ZmZlckZ1bGxQZXJjZW50YWdlfX0pLF92bS5fdihcIiBcIiksX2MoJ21kLWJ1dHRvbicse2F0dHJzOntcImRpc2FibGVkXCI6IV92bS5jb25uZWN0aW9uSGVhbHRoeSB8fCBfdm0ucmVjb3JkSW5Qcm9ncmVzc30sb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5zdGFydFJlY29yZChyZWNvcmQuaWQpfX19LFtfdm0uX3YoXCJSZWNvcmRcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdtZC1idXR0b24nLHthdHRyczp7XCJkaXNhYmxlZFwiOiFfdm0ucmVjb3JkSW5Qcm9ncmVzc30sb246e1wiY2xpY2tcIjpfdm0uc3RvcFJlY29yZH19LFtfdm0uX3YoXCJTdG9wXCIpXSldLDEpLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwicHJldmlld1wifSxbX2MoJ2dyYXBoaWNhbC1oYW5kLWxvZ2dlcicse2F0dHJzOntcInNvdXJjZVwiOl92bS5kZXZpY2VUcmFja2luZ0RhdGEsXCJ0cmFuc3BhcmVudFwiOnRydWV9fSldLDEpXSldKSxfdm0uX3YoXCIgXCIpLF9jKCdtZC1jYXJkLWFjdGlvbnMnLFsoIXJlY29yZC5jcmVhdGVkKT9fYygnbWQtYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJtZC1yYWlzZWQgbWQtcHJpbWFyeVwiLGF0dHJzOntcImRpc2FibGVkXCI6X3ZtLmJ1ZmZlci5sZW5ndGggPT09IDB9LG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2F2ZVJlY29yZChyZWNvcmQuaWQpfX19LFtfdm0uX3YoXCJTYXZlXCIpXSk6X3ZtLl9lKCksX3ZtLl92KFwiIFwiKSwoIXJlY29yZC5jcmVhdGVkKT9fYygnbWQtYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJtZC1hY2NlbnQgbWQtcmFpc2VkXCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5kaXNjYXJkUmVjb3JkKHJlY29yZC5pZCl9fX0sW192bS5fdihcIkRpc2NhcmRcIildKTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLChyZWNvcmQuY3JlYXRlZCk/X2MoJ21kLWJ1dHRvbicse29uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uZG93bmxvYWRSZWNvcmQocmVjb3JkLmlkKX19fSxbX3ZtLl92KFwiRG93bmxvYWRcIildKTpfdm0uX2UoKSxfdm0uX3YoXCIgXCIpLChyZWNvcmQuY3JlYXRlZCk/X2MoJ21kLWJ1dHRvbicse3N0YXRpY0NsYXNzOlwibWQtYWNjZW50XCIsb246e1wiY2xpY2tcIjpmdW5jdGlvbigkZXZlbnQpe192bS5kaXNjYXJkUmVjb3JkKHJlY29yZC5pZCl9fX0sW192bS5fdihcIkRlbGV0ZVwiKV0pOl92bS5fZSgpXSwxKV0sMSl9KV0sMiksX3ZtLl92KFwiIFwiKSxfYygnbWQtc25hY2tiYXInLHthdHRyczp7XCJtZC1wb3NpdGlvblwiOlwiY2VudGVyXCIsXCJtZC1kdXJhdGlvblwiOkluZmluaXR5LFwibWQtYWN0aXZlXCI6X3ZtLnNob3dSZXN0b3JlLFwibWQtcGVyc2lzdGVudFwiOlwiXCJ9LG9uOntcInVwZGF0ZTptZEFjdGl2ZVwiOmZ1bmN0aW9uKCRldmVudCl7X3ZtLnNob3dSZXN0b3JlPSRldmVudH19fSxbX2MoJ3NwYW4nLFtfdm0uX3YoXCJUaGUgUGVyc2lzdGVuY2UgUHJvdmlkZXIgaXMgaG9sZGluZyBcIitfdm0uX3MoX3ZtLnBlcnNpc3RlZFJlY29yZGluZ3MpK1wiIHJlY29yZGluZ3MuXCIpXSksX3ZtLl92KFwiIFwiKSxfYygnbWQtYnV0dG9uJyx7c3RhdGljQ2xhc3M6XCJtZC1wcmltYXJ5IG1kLXJhaXNlZFwiLG9uOntcImNsaWNrXCI6X3ZtLnJlc3RvcmVSZWNvcmRpbmdzfX0sW192bS5fdihcIlJlc3RvcmVcIildKSxfdm0uX3YoXCIgXCIpLF9jKCdtZC1idXR0b24nLHtzdGF0aWNDbGFzczpcIm1kLXJhaXNlZFwiLG9uOntcImNsaWNrXCI6ZnVuY3Rpb24oJGV2ZW50KXtfdm0uc2hvd1Jlc3RvcmUgPSBmYWxzZX19fSxbX3ZtLl92KFwiRGlzbWlzc1wiKV0pXSwxKV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJmdW5jdGlvbiBpbmplY3RTdHlsZSAoY29udGV4dCkge1xuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/bWluaW1pemUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtNTU5Mjc2MzBcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcInNvdXJjZU1hcFxcXCI6ZmFsc2V9IXNhc3MtbG9hZGVyIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vRGV2aWNlUmVjb3JkZXIudnVlXCIpXG59XG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIXRzLWxvYWRlcj97XFxcImFwcGVuZFRzU3VmZml4VG9cXFwiOlt7fV19IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vRGV2aWNlUmVjb3JkZXIudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISF0cy1sb2FkZXI/e1xcXCJhcHBlbmRUc1N1ZmZpeFRvXFxcIjpbe31dfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0RldmljZVJlY29yZGVyLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSAqL1xuaW1wb3J0IHtyZW5kZXIgYXMgX192dWVfcmVuZGVyX18sIHN0YXRpY1JlbmRlckZucyBhcyBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19ffSBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi01NTkyNzYzMFxcXCIsXFxcImhhc1Njb3BlZFxcXCI6dHJ1ZSxcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0RldmljZVJlY29yZGVyLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBcImRhdGEtdi01NTkyNzYzMFwiXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxuaW1wb3J0IG5vcm1hbGl6ZUNvbXBvbmVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudC1ub3JtYWxpemVyXCJcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV9yZW5kZXJfXyxcbiAgX192dWVfc3RhdGljX3JlbmRlcl9mbnNfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9GQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBYUE7QUFDQTtBQUdBO0FBRUE7Ozs7O0FBS0E7QUFPQTtBQVpBOzs7OztBQUtBO0FBQ0E7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQTJLQTtBQXZLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXBMQTtBQU5BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7OztBQ3pIQTtBQUNBOzs7Ozs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///177\n')}}]);