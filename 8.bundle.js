(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{128:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "main[data-v-c3b7811a],section[data-v-c3b7811a]{width:100%;height:100%}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2E0NDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJtYWluW2RhdGEtdi1jM2I3ODExYV0sc2VjdGlvbltkYXRhLXYtYzNiNzgxMWFde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///128\n')},129:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(128);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"2bc1a52e\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2Q0ODciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP21pbmltaXplIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LWMzYjc4MTFhXFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJzb3VyY2VNYXBcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjJiYzFhNTJlXCIsIGNvbnRlbnQsIHRydWUsIHt9KTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///129\n")},131:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return project; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return project3; });\n/**\n * Project a value from one number range onto another one.\n * Establishes a proportion between the two number ranges and returns the proportion\n * applied to the new range.\n * @param value value to be projected\n * @param min minimum value of the input value\n * @param max maximum value of the input value\n * @param targetMin minimum value of the projected plane\n * @param targetMax maximum value of the projected plane\n */\nfunction project(value, min, max, targetMin, targetMax) {\n    return targetMin + (targetMax - targetMin) * ((value - min) / (max - min));\n}\n/**\n * Project a 3 Dimensional Vector from one plane into another one, as described\n * by the from / to projection matrices.\n * @param vector3 The Vector to be projected into a new plane\n * @param projection  The Projection Matrix\n */\nfunction project3(vector3, projection) {\n    const projected = [];\n    for (let i in [0, 1, 2]) {\n        projected.push(project(vector3[i], projection.projectionFrom.min[i], projection.projectionFrom.max[i], projection.projectionTo.min[i], projection.projectionTo.max[i]));\n    }\n    return projected;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL3V0aWwudHM/NjFjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9qZWN0aW9uMyB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbi8qKlxuICogUHJvamVjdCBhIHZhbHVlIGZyb20gb25lIG51bWJlciByYW5nZSBvbnRvIGFub3RoZXIgb25lLlxuICogRXN0YWJsaXNoZXMgYSBwcm9wb3J0aW9uIGJldHdlZW4gdGhlIHR3byBudW1iZXIgcmFuZ2VzIGFuZCByZXR1cm5zIHRoZSBwcm9wb3J0aW9uXG4gKiBhcHBsaWVkIHRvIHRoZSBuZXcgcmFuZ2UuXG4gKiBAcGFyYW0gdmFsdWUgdmFsdWUgdG8gYmUgcHJvamVjdGVkXG4gKiBAcGFyYW0gbWluIG1pbmltdW0gdmFsdWUgb2YgdGhlIGlucHV0IHZhbHVlXG4gKiBAcGFyYW0gbWF4IG1heGltdW0gdmFsdWUgb2YgdGhlIGlucHV0IHZhbHVlXG4gKiBAcGFyYW0gdGFyZ2V0TWluIG1pbmltdW0gdmFsdWUgb2YgdGhlIHByb2plY3RlZCBwbGFuZVxuICogQHBhcmFtIHRhcmdldE1heCBtYXhpbXVtIHZhbHVlIG9mIHRoZSBwcm9qZWN0ZWQgcGxhbmVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb2plY3QoXG4gIHZhbHVlOiBudW1iZXIsXG4gIG1pbjogbnVtYmVyLFxuICBtYXg6IG51bWJlcixcbiAgdGFyZ2V0TWluOiBudW1iZXIsXG4gIHRhcmdldE1heDogbnVtYmVyXG4pOiBudW1iZXIge1xuICByZXR1cm4gdGFyZ2V0TWluICsgKHRhcmdldE1heCAtIHRhcmdldE1pbikgKiAoKHZhbHVlIC0gbWluKSAvIChtYXggLSBtaW4pKTtcbn1cblxuLyoqXG4gKiBQcm9qZWN0IGEgMyBEaW1lbnNpb25hbCBWZWN0b3IgZnJvbSBvbmUgcGxhbmUgaW50byBhbm90aGVyIG9uZSwgYXMgZGVzY3JpYmVkXG4gKiBieSB0aGUgZnJvbSAvIHRvIHByb2plY3Rpb24gbWF0cmljZXMuXG4gKiBAcGFyYW0gdmVjdG9yMyBUaGUgVmVjdG9yIHRvIGJlIHByb2plY3RlZCBpbnRvIGEgbmV3IHBsYW5lXG4gKiBAcGFyYW0gcHJvamVjdGlvbiAgVGhlIFByb2plY3Rpb24gTWF0cml4XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0MyhcbiAgdmVjdG9yMzogbnVtYmVyW10sXG4gIHByb2plY3Rpb246IHsgcHJvamVjdGlvbkZyb206IFByb2plY3Rpb24zOyBwcm9qZWN0aW9uVG86IFByb2plY3Rpb24zIH1cbik6IG51bWJlcltdIHtcbiAgY29uc3QgcHJvamVjdGVkID0gW107XG4gIGZvciAobGV0IGkgaW4gWzAsIDEsIDJdKSB7XG4gICAgcHJvamVjdGVkLnB1c2goXG4gICAgICBwcm9qZWN0KFxuICAgICAgICB2ZWN0b3IzW2ldLFxuICAgICAgICBwcm9qZWN0aW9uLnByb2plY3Rpb25Gcm9tLm1pbltpXSxcbiAgICAgICAgcHJvamVjdGlvbi5wcm9qZWN0aW9uRnJvbS5tYXhbaV0sXG4gICAgICAgIHByb2plY3Rpb24ucHJvamVjdGlvblRvLm1pbltpXSxcbiAgICAgICAgcHJvamVjdGlvbi5wcm9qZWN0aW9uVG8ubWF4W2ldXG4gICAgICApXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcHJvamVjdGVkO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFFQTtBQUFBO0FBQUE7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFPQTtBQUNBO0FBRUE7Ozs7O0FBS0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///131\n')},137:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/imports-loader?THREE=three!./node_modules/three/examples/js/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(136);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(124);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js\nvar fromEvent = __webpack_require__(191);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Subject.js + 1 modules\nvar Subject = __webpack_require__(32);\n\n// EXTERNAL MODULE: ./node_modules/inversify/lib/inversify.js\nvar inversify = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/underscore/underscore.js\nvar underscore = __webpack_require__(135);\n\n// EXTERNAL MODULE: ./node_modules/leapjs/lib/index.js\nvar lib = __webpack_require__(134);\n\n// EXTERNAL MODULE: ./src/dependencyinjection/symbols.ts\nvar symbols = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/devices/leapmotion/leapdriver.ts\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\nconst LEAP_MOTION_DEVICE_NAME = "Leap Motion";\nlet leapdriver_LeapDriver = class LeapDriver {\n    constructor(controllerSettings) {\n        this.controllerSettings = controllerSettings;\n        this.deviceName = LEAP_MOTION_DEVICE_NAME;\n        this.connectionActive = false;\n        this.controller = new lib["Controller"](controllerSettings);\n        this.controller.on("connect", () => (this.connectionActive = true));\n        this.controller.on("disconnect", () => (this.connectionActive = false));\n        this.controller.on("deviceConnected", () => (this.deviceConnected = true));\n        this.controller.on("deviceDisconnected", () => (this.deviceConnected = false));\n        this.outputSubject = new Subject["a" /* Subject */]();\n        this.frameStreamSubscription = Object(fromEvent["a" /* fromEvent */])(this.controller, "frame").subscribe(this.outputSubject);\n    }\n    async isLeapServerRunning(maxWaitTimeInMs) {\n        return new Promise((resolve, reject) => {\n            const sock = new WebSocket(`ws://${this.controllerSettings.host}:${this.controllerSettings.port}`);\n            const hdl = window.setTimeout(() => {\n                if (sock.readyState === sock.OPEN) {\n                    resolve(true);\n                    sock.close();\n                }\n                else {\n                    resolve(false);\n                }\n            }, maxWaitTimeInMs);\n            sock.onerror = () => {\n                resolve(false);\n                window.clearTimeout(hdl);\n            };\n        });\n    }\n    enableClassification(classifiers) {\n        // TODO implement non threaded classification\n        throw "Not Implemented";\n    }\n    getClassificationData() {\n        // TODO classification is not yet supported by the non threaded driver.\n        return undefined;\n    }\n    async getDeviceConnectionState() {\n        return {\n            nativeDeviceDriverOnline: await this.isLeapServerRunning(1000),\n            connectedToNativeDeviceDriver: this.connectionActive,\n            deviceHardwareConnected: this.connectionActive\n                ? this.controller.streaming()\n                : undefined\n        };\n    }\n    establishConnection(monitoringInterval = 1500) {\n        this.monitor = Observable["a" /* Observable */].create(async (observer) => {\n            this.connect();\n            let previousConnectionState = await this.getDeviceConnectionState();\n            observer.next(previousConnectionState);\n            window.setInterval(async () => {\n                let connectionState = await this.getDeviceConnectionState();\n                if (!Object(underscore["isEqual"])(connectionState, previousConnectionState)) {\n                    previousConnectionState = connectionState;\n                    this.connect();\n                    observer.next(connectionState);\n                }\n            }, monitoringInterval);\n        });\n        return this.monitor;\n    }\n    streamConnectionState() {\n        return this.monitor;\n    }\n    getTrackingData() {\n        return this.outputSubject;\n    }\n    async connect() {\n        this.controller.disconnect();\n        return new Promise((resolve) => {\n            this.controller.once("connect", () => {\n                this.connectionActive = true;\n                resolve(true);\n            });\n            this.controller.connect();\n        });\n    }\n    updatePreProcessors(configs) {\n        return false;\n    }\n    updateClassifier(config) {\n        return false;\n    }\n    digest(data) {\n        this.outputSubject.next(data);\n    }\n};\nleapdriver_LeapDriver = __decorate([\n    Object(inversify["injectable"])(),\n    __param(0, Object(inversify["inject"])(symbols["a" /* default */].SETTINGS_HARDWARE_DRIVER_CONNECTION)),\n    __metadata("design:paramtypes", [Object])\n], leapdriver_LeapDriver);\n\n\n// EXTERNAL MODULE: ./src/state/modules/graphics.ts\nvar graphics = __webpack_require__(121);\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/utils.ts\n\n/**\n * Compares an incoming Leap Motion Frame to the current state of the Scene.\n * If the incoming Frame does NOT contain objects that ARE currently painted in\n * the scene, delete them from the scene and clean up the internal state.\n * @param frame The Frame to compare to\n * @param scene The current multihand scene state\n */\nfunction deleteStaleHands(frame, scene) {\n    const shownHands = frame.data.hands.map(hand => hand.type);\n    const validHands = {};\n    /** Delete the Hand Objects that are not in this frame from the native THREE scene */\n    Object.entries(scene.hands).forEach(([type, sceneHand]) => {\n        if (!shownHands.includes(type)) {\n            scene.nativeSceneRef.remove(sceneHand.palm, ...Object.values(sceneHand.fingers));\n        }\n    });\n    /** Build and return new HandScenes containing only the valid (i.e., contained in this frame) Scenes */\n    shownHands.forEach((shownHand) => {\n        if (scene.hands.hasOwnProperty(shownHand)) {\n            validHands[shownHand] = scene.hands[shownHand];\n        }\n    });\n    return validHands;\n}\n/**\n * Based on the ProjectionBox coming from the Device, update the scene states\n * projection matrix accordingly. This Matrix is used in order to cast the point data\n * coming from the device into the correct coordinate system used by the graphical logger\n * @param iBox The Interactionbox coming from the device\n * @param scene The Scene state to alter\n */\nfunction setProjection(iBox, scene) {\n    const min = [];\n    const max = [];\n    for (let i in [0, 1, 2]) {\n        min.push(iBox.center[i] - iBox.size[i] / 2);\n        max.push(iBox.center[i] + iBox.size[i] / 2);\n    }\n    scene.projectionFrom = { min, max };\n    scene.projectionTo = { min: [0, 0, 0], max: [50, 50, 50] };\n}\n/**\n * Create a 3d THREE Vector Object pointing from the center of the\n * THREE Coordinate System to the coordinate (10, 10, 10). Used to\n * initialize Vector Objects\n */\nfunction makeLineVector() {\n    return new three_module["Line"](new three_module["Geometry"]().setFromPoints([\n        new three_module["Vector3"](0, 0, 0),\n        new three_module["Vector3"](10, 10, 10)\n    ]), new three_module["LineBasicMaterial"]({ color: 0xff0000 }));\n}\n\n// EXTERNAL MODULE: ./src/ui/graphics/util.ts\nvar util = __webpack_require__(131);\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/palm.ts\n\n\nfunction initializePalm(type, config) {\n    const mesh = new three_module["Object3D"]();\n    const geometry = new three_module["CircleBufferGeometry"](10, 32, 0, 2 * Math.PI);\n    mesh.add(new three_module["Mesh"](geometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    if (config.drawWireFrame) {\n        mesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](geometry), new three_module["LineBasicMaterial"]({\n            color: 0xffffff,\n            transparent: true,\n            opacity: 0.5\n        })));\n    }\n    return {\n        palm: mesh,\n        fingers: {},\n        palmNormalVector: undefined,\n        palmDirectionalVector: undefined,\n        config\n    };\n}\nfunction updatePalmPosition(hand, scene) {\n    const [x, y, z] = Object(util["b" /* project3 */])(hand.palmPosition, scene);\n    scene.hands[hand.type].palm.position.set(x, y, z);\n    return [x, y, z];\n}\nfunction updatePalmAlign(hand, scene) {\n    const normal = new three_module["Vector3"](...hand.palmNormal);\n    scene.hands[hand.type].palm.children.forEach(mesh => {\n        mesh.lookAt(normal);\n    });\n}\nfunction updatePalmNormalVector(hand, palmPosition, scene) {\n    const normal = scene.hands[hand.type].palmNormalVector;\n    if (normal) {\n        const geometry = normal.geometry;\n        geometry.vertices = [\n            new three_module["Vector3"](0, 0, 0),\n            new three_module["Vector3"](...hand.palmNormal.map(x => x * 50))\n        ];\n        geometry.verticesNeedUpdate = true;\n        normal.position.set.apply(normal.position, ...palmPosition);\n    }\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/finger.ts\n\n\n\n/**\n * Create a new Finger Object and add it to the internal scene state\n * @param finger Leap Pointable data on which basis the Finger Mesh shall be created\n * @param scene The internal scene state\n */\nfunction initializeFinger(finger, scene, config) {\n    const fingerMesh = new three_module["Object3D"]();\n    const fingerTubeGeometry = getFingerTubeGeometry(finger, scene);\n    fingerMesh.add(new three_module["Mesh"](fingerTubeGeometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    fingerMesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](fingerTubeGeometry), new three_module["LineBasicMaterial"]({\n        color: 0xffffff,\n        transparent: true,\n        opacity: 0.5\n    })));\n    return fingerMesh;\n}\n/**\n * Update the Finger painted on screen.\n * @param pointable New Data\n * @param fingerMesh Existing Finger Mesh\n * @param scene Scene State\n */\nfunction updateFinger(pointable, fingerMesh, scene) {\n    const fingerTube = getFingerTubeGeometry(pointable, scene);\n    const oldTube = fingerMesh.children[0]\n        .geometry;\n    oldTube.copy(fingerTube);\n    if (fingerMesh.children.length > 1) {\n        const oldWireFrame = fingerMesh.children[1]\n            .geometry;\n        oldWireFrame.copy(new three_module["WireframeGeometry"](fingerTube));\n    }\n}\n/**\n * Convert a Leap Pointable as coming from the device into a BufferTubeGeometry,\n * optionally smoothed by a CatmullRomCurve.\n * @param p The Leap Pointable\n * @param scene The Scene State\n */\nfunction getFingerTubeGeometry(p, scene) {\n    return new three_module["TubeBufferGeometry"](new three_module["CatmullRomCurve3"]([p.mcpPosition, p.pipPosition, p.dipPosition, p.tipPosition].map(pos => new three_module["Vector3"](...Object(util["b" /* project3 */])(pos, scene)))), 20, 2, 8, false);\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/index.ts\n\n\n\n/**\n * Object containing the Default Hand Configuration.\n */\nconst DefaultHandConfig = {\n    mainColor: 0x156289,\n    emissiveColor: 0x072534,\n    drawWireFrame: true,\n    drawDirectionalVector: true,\n    drawNormalVector: true\n};\nfunction initializeScene(nativeSceneRef) {\n    return { nativeSceneRef, hands: {} };\n}\nfunction render(frame, scene, config) {\n    const mergedConfig = Object.assign({}, DefaultHandConfig, config);\n    setProjection(frame.data.interactionBox, scene);\n    scene.hands = deleteStaleHands(frame, scene);\n    frame.data.hands.forEach(hand => {\n        renderHand(hand, scene, mergedConfig);\n        frame.data.pointables\n            .filter(pointable => pointable.handId === hand.id)\n            .forEach(pointable => {\n            renderFinger(hand.type, pointable, scene, mergedConfig);\n        });\n    });\n}\nfunction renderHand(hand, scene, config) {\n    if (!scene.hands[hand.type]) {\n        scene.hands[hand.type] = initializePalm(hand.type, config);\n        scene.nativeSceneRef.add(scene.hands[hand.type].palm);\n    }\n    const position = updatePalmPosition(hand, scene);\n    updatePalmAlign(hand, scene);\n    updatePalmNormalVector(hand, position, scene);\n    //updatePalmDirectionalVector(hand, scene);\n}\nfunction renderFinger(type, pointable, scene, config) {\n    let fingers = scene.hands[type].fingers;\n    if (!fingers[pointable.type]) {\n        fingers[pointable.type] = initializeFinger(pointable, scene, config);\n        scene.nativeSceneRef.add(fingers[pointable.type]);\n    }\n    updateFinger(pointable, fingers[pointable.type], scene);\n}\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar GraphicalHandLogger_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\n\nlet GraphicalHandLogger_GraphicalHandLogger = class GraphicalHandLogger extends vue_runtime_esm["default"] {\n    constructor() {\n        super(...arguments);\n        this.scene = new three_module["Scene"]();\n    }\n    mounted() {\n        this.initializeRenderer();\n        this.initializeGraphics();\n        this.setupWindowResizeListener();\n        this.setupDataStream();\n        this.animate();\n    }\n    setupWindowResizeListener() {\n        window.addEventListener("resize", this.fixAspectRatioOnResize, false);\n    }\n    removeWindowResizeListener() {\n        window.removeEventListener("resize", this.fixAspectRatioOnResize);\n    }\n    fixAspectRatioOnResize() {\n        const animation = this.$refs.animation;\n        if (this.camera && animation) {\n            this.camera.aspect = animation.clientWidth / animation.clientHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        }\n    }\n    beforeDestroy() {\n        if (this.animationHandle) {\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n        this.removeWindowResizeListener();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    setupDataStream() {\n        const name = this.deviceFacade.getDeviceDriver().deviceName;\n        if (name == LEAP_MOTION_DEVICE_NAME) {\n            if (!this.multiHandScene) {\n                this.multiHandScene = initializeScene(this.scene);\n            }\n            if (this.subscription) {\n                this.subscription.unsubscribe();\n            }\n            this.subscription = this.source.subscribe(frame => {\n                render(frame, this.multiHandScene, this.handConfig);\n            });\n        }\n        else {\n            console.warn("Can\'t plot hand tracking data from unsupported device:", name);\n        }\n    }\n    initializeRenderer() {\n        if (!this.renderer) {\n            graphics["c" /* setRenderer */](this.$store, new three_module["WebGLRenderer"]({ antialias: true, alpha: true }));\n        }\n    }\n    initializeGraphics() {\n        let animation = this.$refs.animation;\n        this.camera = new three_module["PerspectiveCamera"](75, animation.clientWidth / animation.clientHeight, 0.1, 1000);\n        this.camera.position.set.apply(this.camera.position, this.cameraPosition);\n        this.controls = new three_module["OrbitControls"](this.camera, animation);\n        this.controls.autoRotateSpeed = 0.5;\n        this.controls.autoRotate = this.rotate;\n        this.controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        this.controls.dampingFactor = 0.25;\n        this.controls.minDistance = 100;\n        this.controls.maxDistance = 500;\n        var lights = [];\n        lights[0] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[1] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[2] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[0].position.set(0, 200, 0);\n        lights[1].position.set(100, 200, 100);\n        lights[2].position.set(-100, -200, -100);\n        this.scene.add(lights[0], lights[1], lights[2]);\n        this.renderer.setClearColor(0xffffff, 0);\n        this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        animation.appendChild(this.renderer.domElement);\n        if (this.transparent) {\n            this.scene.background = new three_module["Color"](0xffffff);\n        }\n        else {\n            this.scene.background = new three_module["Color"](this.background);\n        }\n        if (this.grid) {\n            let axisHelper = new three_module["GridHelper"](100, 10);\n            this.scene.add(axisHelper);\n        }\n    }\n    animate() {\n        this.animationHandle = window.requestAnimationFrame(this.animate);\n        if (this.renderer && this.camera) {\n            if (this.controls) {\n                this.controls.update();\n            }\n            this.renderer.render(this.scene, this.camera);\n        }\n        else {\n            console.warn("THREE.js not initialized properly");\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n    }\n    get renderer() {\n        return graphics["a" /* getRenderer */](this.$store);\n    }\n    get deviceFacade() {\n        return device["e" /* getDeviceFacade */](this.$store);\n    }\n};\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "transparent", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: 0x0 }),\n    GraphicalHandLogger_metadata("design:type", Number)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "background", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: true }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "grid", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "rotate", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => [0, 0, 0] }),\n    GraphicalHandLogger_metadata("design:type", Array)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "cameraPosition", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => { } }),\n    GraphicalHandLogger_metadata("design:type", Object)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "handConfig", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])(),\n    GraphicalHandLogger_metadata("design:type", Observable["a" /* Observable */])\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "source", void 0);\nGraphicalHandLogger_GraphicalHandLogger = GraphicalHandLogger_decorate([\n    Object(vue_property_decorator["a" /* Component */])({})\n], GraphicalHandLogger_GraphicalHandLogger);\n/* harmony default export */ var graphics_GraphicalHandLogger = (GraphicalHandLogger_GraphicalHandLogger);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-c3b7811a","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',[_c(\'main\',{ref:"animation",staticClass:"three-container"})])}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/graphics/GraphicalHandLogger.vue\nfunction injectStyle (context) {\n  __webpack_require__(129)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-c3b7811a"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  graphics_GraphicalHandLogger,\n  GraphicalHandLogger_render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_graphics_GraphicalHandLogger = __webpack_exports__["a"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///137\n')},157:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".hand-measurement{display:flex;height:calc(100vh - 150px)}.hand-measurement .logger,.hand-measurement .measurements{flex:1}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL21lYXN1cmUvSGFuZE1lYXN1cmVtZW50LnZ1ZT8zY2E3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhhbmQtbWVhc3VyZW1lbnR7ZGlzcGxheTpmbGV4O2hlaWdodDpjYWxjKDEwMHZoIC0gMTUwcHgpfS5oYW5kLW1lYXN1cmVtZW50IC5sb2dnZXIsLmhhbmQtbWVhc3VyZW1lbnQgLm1lYXN1cmVtZW50c3tmbGV4OjF9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///157\n')},158:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(157);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"5a57a2a6\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL21lYXN1cmUvSGFuZE1lYXN1cmVtZW50LnZ1ZT9kNmY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9taW5pbWl6ZSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJzb3VyY2VNYXBcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0hhbmRNZWFzdXJlbWVudC52dWVcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiNWE1N2EyYTZcIiwgY29udGVudCwgdHJ1ZSwge30pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///158\n")},51:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/ui/graphics/GraphicalHandLogger.vue + 7 modules\nvar GraphicalHandLogger = __webpack_require__(137);\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/measure/HandMeasurement.vue\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\nlet HandMeasurement_HandMeasurement = class HandMeasurement extends vue_runtime_esm["default"] {\n    constructor() {\n        super(...arguments);\n        this.measureHandConfig = {\n            mainColor: 0xff0000,\n            drawWireFrame: false,\n        };\n        this.trackingData = device["e" /* getDeviceFacade */](this.$store)\n            .getHandTrackingData(this.$store);\n    }\n};\nHandMeasurement_HandMeasurement = __decorate([\n    Object(vue_property_decorator["a" /* Component */])({\n        components: {\n            GraphicalHandLogger: GraphicalHandLogger["a" /* default */]\n        }\n    })\n], HandMeasurement_HandMeasurement);\n/* harmony default export */ var measure_HandMeasurement = (HandMeasurement_HandMeasurement);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-3168994b","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/measure/HandMeasurement.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',{staticClass:"hand-measurement"},[_c(\'graphical-hand-logger\',{staticClass:"logger",attrs:{"source":_vm.trackingData,"handConfig":_vm.measureHandConfig}}),_vm._v(" "),_c(\'section\',{staticClass:"measurements"})],1)}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/measure/HandMeasurement.vue\nfunction injectStyle (context) {\n  __webpack_require__(158)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  measure_HandMeasurement,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_measure_HandMeasurement = __webpack_exports__["default"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdWkvbWVhc3VyZS9IYW5kTWVhc3VyZW1lbnQudnVlPzQzY2IiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VpL21lYXN1cmUvSGFuZE1lYXN1cmVtZW50LnZ1ZT9jNWViIiwid2VicGFjazovLy8uL3NyYy91aS9tZWFzdXJlL0hhbmRNZWFzdXJlbWVudC52dWU/NmFmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5cblxuXG5cblxuXG5pbXBvcnQgVnVlIGZyb20gXCJ2dWVcIjtcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJ2dWUtcHJvcGVydHktZGVjb3JhdG9yXCI7XG5cbmltcG9ydCAqIGFzIGRldmljZSBmcm9tIFwiQC9zdGF0ZS9tb2R1bGVzL2RldmljZVwiO1xuaW1wb3J0IEdyYXBoaWNhbEhhbmRMb2dnZXIgZnJvbSAnQC91aS9ncmFwaGljcy9HcmFwaGljYWxIYW5kTG9nZ2VyLnZ1ZSc7XG5pbXBvcnQgeyBIYW5kQ29uZmlnIH0gZnJvbSAnQC91aS9ncmFwaGljcy90eXBlcyc7XG5cbkBDb21wb25lbnQoe1xuICBjb21wb25lbnRzOiB7XG4gICAgICBHcmFwaGljYWxIYW5kTG9nZ2VyXG4gIH1cbn0pXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIYW5kTWVhc3VyZW1lbnQgZXh0ZW5kcyBWdWUge1xuICBwdWJsaWMgbWVhc3VyZUhhbmRDb25maWc6IFBhcnRpYWw8SGFuZENvbmZpZz4gPSB7XG4gICAgICBtYWluQ29sb3I6IDB4ZmYwMDAwLFxuICAgICAgZHJhd1dpcmVGcmFtZTogZmFsc2UsXG4gIH0gIFxuXG4gIHByaXZhdGUgdHJhY2tpbmdEYXRhID0gZGV2aWNlXG4gICAgLmdldERldmljZUZhY2FkZSh0aGlzLiRzdG9yZSlcbiAgICAuZ2V0SGFuZFRyYWNraW5nRGF0YSh0aGlzLiRzdG9yZSk7XG59XG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24gKCkge3ZhciBfdm09dGhpczt2YXIgX2g9X3ZtLiRjcmVhdGVFbGVtZW50O3ZhciBfYz1fdm0uX3NlbGYuX2N8fF9oO3JldHVybiBfYygnc2VjdGlvbicse3N0YXRpY0NsYXNzOlwiaGFuZC1tZWFzdXJlbWVudFwifSxbX2MoJ2dyYXBoaWNhbC1oYW5kLWxvZ2dlcicse3N0YXRpY0NsYXNzOlwibG9nZ2VyXCIsYXR0cnM6e1wic291cmNlXCI6X3ZtLnRyYWNraW5nRGF0YSxcImhhbmRDb25maWdcIjpfdm0ubWVhc3VyZUhhbmRDb25maWd9fSksX3ZtLl92KFwiIFwiKSxfYygnc2VjdGlvbicse3N0YXRpY0NsYXNzOlwibWVhc3VyZW1lbnRzXCJ9KV0sMSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0iLCJmdW5jdGlvbiBpbmplY3RTdHlsZSAoY29udGV4dCkge1xuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXI/bWluaW1pemUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hc2Fzcy1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9IYW5kTWVhc3VyZW1lbnQudnVlXCIpXG59XG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIXRzLWxvYWRlcj97XFxcImFwcGVuZFRzU3VmZml4VG9cXFwiOlt7fV19IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vSGFuZE1lYXN1cmVtZW50LnZ1ZVwiXG5pbXBvcnQgX192dWVfc2NyaXB0X18gZnJvbSBcIiEhdHMtbG9hZGVyP3tcXFwiYXBwZW5kVHNTdWZmaXhUb1xcXCI6W3t9XX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9IYW5kTWVhc3VyZW1lbnQudnVlXCJcbi8qIHRlbXBsYXRlICovXG5pbXBvcnQge3JlbmRlciBhcyBfX3Z1ZV9yZW5kZXJfXywgc3RhdGljUmVuZGVyRm5zIGFzIF9fdnVlX3N0YXRpY19yZW5kZXJfZm5zX199IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTMxNjg5OTRiXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0hhbmRNZWFzdXJlbWVudC52dWVcIlxuLyogdGVtcGxhdGUgZnVuY3Rpb25hbCAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyA9IGZhbHNlXG4vKiBzdHlsZXMgKi9cbnZhciBfX3Z1ZV9zdHlsZXNfXyA9IGluamVjdFN0eWxlXG4vKiBzY29wZUlkICovXG52YXIgX192dWVfc2NvcGVJZF9fID0gbnVsbFxuLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG52YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyA9IG51bGxcbmltcG9ydCBub3JtYWxpemVDb21wb25lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnQtbm9ybWFsaXplclwiXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfcmVuZGVyX18sXG4gIF9fdnVlX3N0YXRpY19yZW5kZXJfZm5zX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQuZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTQTtBQUNBO0FBRUE7QUFDQTtBQVFBO0FBTEE7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFFQSw2REFDQTtBQUNBO0FBQ0E7QUFBQTtBQVRBO0FBTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7OztBQ3JCQTtBQUNBOzs7Ozs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///51\n')}}]);