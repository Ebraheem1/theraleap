(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{103:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, "main[data-v-24ac9cde],section[data-v-24ac9cde]{width:100%;height:100%}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2E2ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJtYWluW2RhdGEtdi0yNGFjOWNkZV0sc2VjdGlvbltkYXRhLXYtMjRhYzljZGVde3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///103\n')},104:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(103);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"d552756c\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2dyYXBoaWNzL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlP2U1NDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP21pbmltaXplIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTI0YWM5Y2RlXFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJzb3VyY2VNYXBcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0dyYXBoaWNhbEhhbmRMb2dnZXIudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcImQ1NTI3NTZjXCIsIGNvbnRlbnQsIHRydWUsIHt9KTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///104\n")},111:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/imports-loader?THREE=three!./node_modules/three/examples/js/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(110);\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(99);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/observable/fromEvent.js\nvar fromEvent = __webpack_require__(190);\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Subject.js + 1 modules\nvar Subject = __webpack_require__(32);\n\n// EXTERNAL MODULE: ./node_modules/inversify/lib/inversify.js\nvar inversify = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/underscore/underscore.js\nvar underscore = __webpack_require__(109);\n\n// EXTERNAL MODULE: ./node_modules/leapjs/lib/index.js\nvar lib = __webpack_require__(108);\n\n// EXTERNAL MODULE: ./src/dependencyinjection/symbols.ts\nvar symbols = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./src/devices/leapmotion/leapdriver.ts\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\nvar __param = (undefined && undefined.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n\n\n\n\n\nconst LEAP_MOTION_DEVICE_NAME = "Leap Motion";\nlet leapdriver_LeapDriver = class LeapDriver {\n    constructor(controllerSettings) {\n        this.controllerSettings = controllerSettings;\n        this.deviceName = LEAP_MOTION_DEVICE_NAME;\n        this.connectionActive = false;\n        this.controller = new lib["Controller"](controllerSettings);\n        this.controller.on("connect", () => (this.connectionActive = true));\n        this.controller.on("disconnect", () => (this.connectionActive = false));\n        this.controller.on("deviceConnected", () => (this.deviceConnected = true));\n        this.controller.on("deviceDisconnected", () => (this.deviceConnected = false));\n        this.outputSubject = new Subject["a" /* Subject */]();\n        this.frameStreamSubscription = Object(fromEvent["a" /* fromEvent */])(this.controller, "frame").subscribe(this.outputSubject);\n    }\n    async isLeapServerRunning(maxWaitTimeInMs) {\n        return new Promise((resolve, reject) => {\n            const sock = new WebSocket(`ws://${this.controllerSettings.host}:${this.controllerSettings.port}`);\n            const hdl = window.setTimeout(() => {\n                if (sock.readyState === sock.OPEN) {\n                    resolve(true);\n                    sock.close();\n                }\n                else {\n                    resolve(false);\n                }\n            }, maxWaitTimeInMs);\n            sock.onerror = () => {\n                resolve(false);\n                window.clearTimeout(hdl);\n            };\n        });\n    }\n    enableClassification(classifiers) {\n        // TODO implement non threaded classification\n        throw "Not Implemented";\n    }\n    getClassificationData() {\n        // TODO classification is not yet supported by the non threaded driver.\n        return undefined;\n    }\n    async getDeviceConnectionState() {\n        return {\n            nativeDeviceDriverOnline: await this.isLeapServerRunning(1000),\n            connectedToNativeDeviceDriver: this.connectionActive,\n            deviceHardwareConnected: this.connectionActive\n                ? this.controller.streaming()\n                : undefined\n        };\n    }\n    establishConnection(monitoringInterval = 1500) {\n        this.monitor = Observable["a" /* Observable */].create(async (observer) => {\n            this.connect();\n            let previousConnectionState = await this.getDeviceConnectionState();\n            observer.next(previousConnectionState);\n            window.setInterval(async () => {\n                let connectionState = await this.getDeviceConnectionState();\n                if (!Object(underscore["isEqual"])(connectionState, previousConnectionState)) {\n                    previousConnectionState = connectionState;\n                    this.connect();\n                    observer.next(connectionState);\n                }\n            }, monitoringInterval);\n        });\n        return this.monitor;\n    }\n    streamConnectionState() {\n        return this.monitor;\n    }\n    getTrackingData() {\n        return this.outputSubject;\n    }\n    async connect() {\n        this.controller.disconnect();\n        return new Promise((resolve) => {\n            this.controller.once("connect", () => {\n                this.connectionActive = true;\n                resolve(true);\n            });\n            this.controller.connect();\n        });\n    }\n    updatePreProcessors(configs) {\n        return false;\n    }\n    updateClassifier(config) {\n        return false;\n    }\n    digest(data) {\n        this.outputSubject.next(data);\n    }\n};\nleapdriver_LeapDriver = __decorate([\n    Object(inversify["injectable"])(),\n    __param(0, Object(inversify["inject"])(symbols["a" /* default */].SETTINGS_HARDWARE_DRIVER_CONNECTION)),\n    __metadata("design:paramtypes", [Object])\n], leapdriver_LeapDriver);\n\n\n// EXTERNAL MODULE: ./src/state/modules/graphics.ts\nvar graphics = __webpack_require__(96);\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/utils.ts\n\n/**\n * Compares an incoming Leap Motion Frame to the current state of the Scene.\n * If the incoming Frame does NOT contain objects that ARE currently painted in\n * the scene, delete them from the scene and clean up the internal state.\n * @param frame The Frame to compare to\n * @param scene The current multihand scene state\n */\nfunction deleteStaleHands(frame, scene) {\n    const shownHands = frame.data.hands.map(hand => hand.type);\n    const validHands = {};\n    /** Delete the Hand Objects that are not in this frame from the native THREE scene */\n    Object.entries(scene.hands).forEach(([type, sceneHand]) => {\n        if (!shownHands.includes(type)) {\n            scene.nativeSceneRef.remove(sceneHand.palm, ...Object.values(sceneHand.fingers));\n        }\n    });\n    /** Build and return new HandScenes containing only the valid (i.e., contained in this frame) Scenes */\n    shownHands.forEach((shownHand) => {\n        if (scene.hands.hasOwnProperty(shownHand)) {\n            validHands[shownHand] = scene.hands[shownHand];\n        }\n    });\n    return validHands;\n}\n/**\n * Based on the ProjectionBox coming from the Device, update the scene states\n * projection matrix accordingly. This Matrix is used in order to cast the point data\n * coming from the device into the correct coordinate system used by the graphical logger\n * @param iBox The Interactionbox coming from the device\n * @param scene The Scene state to alter\n */\nfunction setProjection(iBox, scene) {\n    const min = [];\n    const max = [];\n    for (let i in [0, 1, 2]) {\n        min.push(iBox.center[i] - iBox.size[i] / 2);\n        max.push(iBox.center[i] + iBox.size[i] / 2);\n    }\n    scene.projectionFrom = { min, max };\n    scene.projectionTo = { min: [0, 0, 0], max: [50, 50, 50] };\n}\n/**\n * Create a 3d THREE Vector Object pointing from the center of the\n * THREE Coordinate System to the coordinate (10, 10, 10). Used to\n * initialize Vector Objects\n */\nfunction makeLineVector() {\n    return new three_module["Line"](new three_module["Geometry"]().setFromPoints([\n        new three_module["Vector3"](0, 0, 0),\n        new three_module["Vector3"](10, 10, 10)\n    ]), new three_module["LineBasicMaterial"]({ color: 0xff0000 }));\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/util.ts\n/**\n * Project a value from one number range onto another one.\n * Establishes a proportion between the two number ranges and returns the proportion\n * applied to the new range.\n * @param value value to be projected\n * @param min minimum value of the input value\n * @param max maximum value of the input value\n * @param targetMin minimum value of the projected plane\n * @param targetMax maximum value of the projected plane\n */\nfunction project(value, min, max, targetMin, targetMax) {\n    return targetMin + (targetMax - targetMin) * ((value - min) / (max - min));\n}\n/**\n * Project a 3 Dimensional Vector from one plane into another one, as described\n * by the from / to projection matrices.\n * @param vector3 The Vector to be projected into a new plane\n * @param projection  The Projection Matrix\n */\nfunction project3(vector3, projection) {\n    const projected = [];\n    for (let i in [0, 1, 2]) {\n        projected.push(project(vector3[i], projection.projectionFrom.min[i], projection.projectionFrom.max[i], projection.projectionTo.min[i], projection.projectionTo.max[i]));\n    }\n    return projected;\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/palm.ts\n\n\nfunction initializePalm(type, config) {\n    const mesh = new three_module["Object3D"]();\n    const geometry = new three_module["CircleBufferGeometry"](10, 32, 0, 2 * Math.PI);\n    mesh.add(new three_module["Mesh"](geometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    if (config.drawWireFrame) {\n        mesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](geometry), new three_module["LineBasicMaterial"]({\n            color: 0xffffff,\n            transparent: true,\n            opacity: 0.5\n        })));\n    }\n    return {\n        palm: mesh,\n        fingers: {},\n        palmNormalVector: undefined,\n        palmDirectionalVector: undefined,\n        config\n    };\n}\nfunction updatePalmPosition(hand, scene) {\n    const [x, y, z] = project3(hand.palmPosition, scene);\n    scene.hands[hand.type].palm.position.set(x, y, z);\n    return [x, y, z];\n}\nfunction updatePalmAlign(hand, scene) {\n    const normal = new three_module["Vector3"](...hand.palmNormal);\n    scene.hands[hand.type].palm.children.forEach(mesh => {\n        mesh.lookAt(normal);\n    });\n}\nfunction updatePalmNormalVector(hand, palmPosition, scene) {\n    const normal = scene.hands[hand.type].palmNormalVector;\n    if (normal) {\n        const geometry = normal.geometry;\n        geometry.vertices = [\n            new three_module["Vector3"](0, 0, 0),\n            new three_module["Vector3"](...hand.palmNormal.map(x => x * 50))\n        ];\n        geometry.verticesNeedUpdate = true;\n        normal.position.set.apply(normal.position, ...palmPosition);\n    }\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/finger.ts\n\n\n\n/**\n * Create a new Finger Object and add it to the internal scene state\n * @param finger Leap Pointable data on which basis the Finger Mesh shall be created\n * @param scene The internal scene state\n */\nfunction initializeFinger(finger, scene, config) {\n    const fingerMesh = new three_module["Object3D"]();\n    const fingerTubeGeometry = getFingerTubeGeometry(finger, scene);\n    fingerMesh.add(new three_module["Mesh"](fingerTubeGeometry, new three_module["MeshPhongMaterial"]({\n        color: config.mainColor,\n        emissive: config.emissiveColor,\n        side: three_module["DoubleSide"],\n        flatShading: true\n    })));\n    fingerMesh.add(new three_module["LineSegments"](new three_module["WireframeGeometry"](fingerTubeGeometry), new three_module["LineBasicMaterial"]({\n        color: 0xffffff,\n        transparent: true,\n        opacity: 0.5\n    })));\n    return fingerMesh;\n}\n/**\n * Update the Finger painted on screen.\n * @param pointable New Data\n * @param fingerMesh Existing Finger Mesh\n * @param scene Scene State\n */\nfunction updateFinger(pointable, fingerMesh, scene) {\n    const fingerTube = getFingerTubeGeometry(pointable, scene);\n    const oldTube = fingerMesh.children[0]\n        .geometry;\n    oldTube.copy(fingerTube);\n    if (fingerMesh.children.length > 1) {\n        const oldWireFrame = fingerMesh.children[1]\n            .geometry;\n        oldWireFrame.copy(new three_module["WireframeGeometry"](fingerTube));\n    }\n}\n/**\n * Convert a Leap Pointable as coming from the device into a BufferTubeGeometry,\n * optionally smoothed by a CatmullRomCurve.\n * @param p The Leap Pointable\n * @param scene The Scene State\n */\nfunction getFingerTubeGeometry(p, scene) {\n    return new three_module["TubeBufferGeometry"](new three_module["CatmullRomCurve3"]([p.mcpPosition, p.pipPosition, p.dipPosition, p.tipPosition].map(pos => new three_module["Vector3"](...project3(pos, scene)))), 20, 2, 8, false);\n}\n\n// CONCATENATED MODULE: ./src/ui/graphics/leap-render-utils/index.ts\n\n\n\n/**\n * Object containing the Default Hand Configuration.\n */\nconst DefaultHandConfig = {\n    mainColor: 0x156289,\n    emissiveColor: 0x072534,\n    drawWireFrame: true,\n    drawDirectionalVector: true,\n    drawNormalVector: true\n};\nfunction initializeScene(nativeSceneRef) {\n    return { nativeSceneRef, hands: {} };\n}\nfunction render(frame, scene, config) {\n    const mergedConfig = Object.assign({}, DefaultHandConfig, config);\n    setProjection(frame.data.interactionBox, scene);\n    scene.hands = deleteStaleHands(frame, scene);\n    frame.data.hands.forEach(hand => {\n        renderHand(hand, scene, mergedConfig);\n        frame.data.pointables\n            .filter(pointable => pointable.handId === hand.id)\n            .forEach(pointable => {\n            renderFinger(hand.type, pointable, scene, mergedConfig);\n        });\n    });\n}\nfunction renderHand(hand, scene, config) {\n    if (!scene.hands[hand.type]) {\n        scene.hands[hand.type] = initializePalm(hand.type, config);\n        scene.nativeSceneRef.add(scene.hands[hand.type].palm);\n    }\n    const position = updatePalmPosition(hand, scene);\n    updatePalmAlign(hand, scene);\n    updatePalmNormalVector(hand, position, scene);\n    //updatePalmDirectionalVector(hand, scene);\n}\nfunction renderFinger(type, pointable, scene, config) {\n    let fingers = scene.hands[type].fingers;\n    if (!fingers[pointable.type]) {\n        fingers[pointable.type] = initializeFinger(pointable, scene, config);\n        scene.nativeSceneRef.add(fingers[pointable.type]);\n    }\n    updateFinger(pointable, fingers[pointable.type], scene);\n}\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar GraphicalHandLogger_metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\n\nlet GraphicalHandLogger_GraphicalHandLogger = class GraphicalHandLogger extends vue_runtime_esm["default"] {\n    constructor() {\n        super(...arguments);\n        this.scene = new three_module["Scene"]();\n    }\n    mounted() {\n        this.initializeRenderer();\n        this.initializeGraphics();\n        this.setupWindowResizeListener();\n        this.setupDataStream();\n        this.animate();\n    }\n    setupWindowResizeListener() {\n        window.addEventListener("resize", this.fixAspectRatioOnResize, false);\n    }\n    removeWindowResizeListener() {\n        window.removeEventListener("resize", this.fixAspectRatioOnResize);\n    }\n    fixAspectRatioOnResize() {\n        const animation = this.$refs.animation;\n        if (this.camera && animation) {\n            this.camera.aspect = animation.clientWidth / animation.clientHeight;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        }\n    }\n    beforeDestroy() {\n        if (this.animationHandle) {\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n        this.removeWindowResizeListener();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    setupDataStream() {\n        const name = this.deviceFacade.getDeviceDriver().deviceName;\n        if (name == LEAP_MOTION_DEVICE_NAME) {\n            if (!this.multiHandScene) {\n                this.multiHandScene = initializeScene(this.scene);\n            }\n            if (this.subscription) {\n                this.subscription.unsubscribe();\n            }\n            this.subscription = this.source.subscribe(frame => {\n                render(frame, this.multiHandScene, this.handConfig);\n            });\n        }\n        else {\n            console.warn("Can\'t plot hand tracking data from unsupported device:", name);\n        }\n    }\n    initializeRenderer() {\n        if (!this.renderer) {\n            graphics["c" /* setRenderer */](this.$store, new three_module["WebGLRenderer"]({ antialias: true, alpha: true }));\n        }\n    }\n    initializeGraphics() {\n        let animation = this.$refs.animation;\n        this.camera = new three_module["PerspectiveCamera"](75, animation.clientWidth / animation.clientHeight, 0.1, 1000);\n        this.camera.position.set.apply(this.camera.position, this.cameraPosition);\n        this.controls = new three_module["OrbitControls"](this.camera, animation);\n        this.controls.autoRotateSpeed = 0.5;\n        this.controls.autoRotate = this.rotate;\n        this.controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        this.controls.dampingFactor = 0.25;\n        this.controls.minDistance = 100;\n        this.controls.maxDistance = 500;\n        var lights = [];\n        lights[0] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[1] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[2] = new three_module["PointLight"](0xffffff, 1, 0);\n        lights[0].position.set(0, 200, 0);\n        lights[1].position.set(100, 200, 100);\n        lights[2].position.set(-100, -200, -100);\n        this.scene.add(lights[0], lights[1], lights[2]);\n        this.renderer.setClearColor(0xffffff, 0);\n        this.renderer.setSize(animation.clientWidth, animation.clientHeight);\n        animation.appendChild(this.renderer.domElement);\n        if (this.transparent) {\n            this.scene.background = new three_module["Color"](0xffffff);\n        }\n        else {\n            this.scene.background = new three_module["Color"](this.background);\n        }\n        if (this.grid) {\n            let axisHelper = new three_module["GridHelper"](100, 10);\n            this.scene.add(axisHelper);\n        }\n    }\n    animate() {\n        this.animationHandle = window.requestAnimationFrame(this.animate);\n        if (this.renderer && this.camera) {\n            if (this.controls) {\n                this.controls.update();\n            }\n            this.renderer.render(this.scene, this.camera);\n        }\n        else {\n            console.warn("THREE.js not initialized properly");\n            window.cancelAnimationFrame(this.animationHandle);\n        }\n    }\n    get renderer() {\n        return graphics["a" /* getRenderer */](this.$store);\n    }\n    get deviceFacade() {\n        return device["e" /* getDeviceFacade */](this.$store);\n    }\n};\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "transparent", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: 0x0 }),\n    GraphicalHandLogger_metadata("design:type", Number)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "background", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: true }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "grid", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: false }),\n    GraphicalHandLogger_metadata("design:type", Boolean)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "rotate", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => [0, 0, 0] }),\n    GraphicalHandLogger_metadata("design:type", Array)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "cameraPosition", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])({ default: () => { } }),\n    GraphicalHandLogger_metadata("design:type", Object)\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "handConfig", void 0);\nGraphicalHandLogger_decorate([\n    Object(vue_property_decorator["b" /* Prop */])(),\n    GraphicalHandLogger_metadata("design:type", Observable["a" /* Observable */])\n], GraphicalHandLogger_GraphicalHandLogger.prototype, "source", void 0);\nGraphicalHandLogger_GraphicalHandLogger = GraphicalHandLogger_decorate([\n    Object(vue_property_decorator["a" /* Component */])({})\n], GraphicalHandLogger_GraphicalHandLogger);\n/* harmony default export */ var graphics_GraphicalHandLogger = (GraphicalHandLogger_GraphicalHandLogger);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-24ac9cde","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/graphics/GraphicalHandLogger.vue\nvar GraphicalHandLogger_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',[_c(\'main\',{ref:"animation",staticClass:"three-container"})])}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/graphics/GraphicalHandLogger.vue\nfunction injectStyle (context) {\n  __webpack_require__(104)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-24ac9cde"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  graphics_GraphicalHandLogger,\n  GraphicalHandLogger_render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_graphics_GraphicalHandLogger = __webpack_exports__["a"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///111\n')},137:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".source[data-v-1f005ccb]{font-family:Consolas,Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;overflow:auto;width:auto;padding:3px;margin-right:2px;background-color:#eee;max-height:600px}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL3V0aWxzL0NvZGUudnVlPzRmZmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc291cmNlW2RhdGEtdi0xZjAwNWNjYl17Zm9udC1mYW1pbHk6Q29uc29sYXMsTWVubG8sTW9uYWNvLEx1Y2lkYSBDb25zb2xlLExpYmVyYXRpb24gTW9ubyxEZWphVnUgU2FucyBNb25vLEJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ubyxDb3VyaWVyIE5ldyxtb25vc3BhY2Usc2VyaWY7b3ZlcmZsb3c6YXV0bzt3aWR0aDphdXRvO3BhZGRpbmc6M3B4O21hcmdpbi1yaWdodDoycHg7YmFja2dyb3VuZC1jb2xvcjojZWVlO21heC1oZWlnaHQ6NjAwcHh9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///137\n')},138:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(137);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"b02898d2\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL3V0aWxzL0NvZGUudnVlP2I3YWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP21pbmltaXplIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlci9pbmRleC5qcz97XFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTFmMDA1Y2NiXFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJzb3VyY2VNYXBcXFwiOmZhbHNlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0NvZGUudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcImIwMjg5OGQyXCIsIGNvbnRlbnQsIHRydWUsIHt9KTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///138\n")},139:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".md-card[data-v-7410ac92]{max-width:800px}.md-card-media[data-v-7410ac92]{height:400px}.md-field[data-v-7410ac92]{margin-bottom:60px}.loading[data-v-7410ac92]{background:#000;height:400px;display:flex}.loading .md-progress-spinner[data-v-7410ac92]{margin:auto}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2NsYXNzaWZ5L1RodW1iU3ByZWFkQ2xhc3NpZmllci52dWU/OTI2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tZC1jYXJkW2RhdGEtdi03NDEwYWM5Ml17bWF4LXdpZHRoOjgwMHB4fS5tZC1jYXJkLW1lZGlhW2RhdGEtdi03NDEwYWM5Ml17aGVpZ2h0OjQwMHB4fS5tZC1maWVsZFtkYXRhLXYtNzQxMGFjOTJde21hcmdpbi1ib3R0b206NjBweH0ubG9hZGluZ1tkYXRhLXYtNzQxMGFjOTJde2JhY2tncm91bmQ6IzAwMDtoZWlnaHQ6NDAwcHg7ZGlzcGxheTpmbGV4fS5sb2FkaW5nIC5tZC1wcm9ncmVzcy1zcGlubmVyW2RhdGEtdi03NDEwYWM5Ml17bWFyZ2luOmF1dG99XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///139\n')},140:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(139);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"4ea0657b\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2NsYXNzaWZ5L1RodW1iU3ByZWFkQ2xhc3NpZmllci52dWU/ZjlkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/bWluaW1pemUhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtNzQxMGFjOTJcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcInNvdXJjZU1hcFxcXCI6ZmFsc2V9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vVGh1bWJTcHJlYWRDbGFzc2lmaWVyLnZ1ZVwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCI0ZWEwNjU3YlwiLCBjb250ZW50LCB0cnVlLCB7fSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///140\n")},141:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(23)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".md-card[data-v-70c78082]{max-width:800px}.md-card-media[data-v-70c78082]{height:400px}.md-field[data-v-70c78082]{margin-bottom:60px}.loading[data-v-70c78082]{background:#000;height:400px;display:flex}.loading .md-progress-spinner[data-v-70c78082]{margin:auto}", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2NsYXNzaWZ5L0NsYXNzaWZpZXJzLnZ1ZT8yNjNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm1kLWNhcmRbZGF0YS12LTcwYzc4MDgyXXttYXgtd2lkdGg6ODAwcHh9Lm1kLWNhcmQtbWVkaWFbZGF0YS12LTcwYzc4MDgyXXtoZWlnaHQ6NDAwcHh9Lm1kLWZpZWxkW2RhdGEtdi03MGM3ODA4Ml17bWFyZ2luLWJvdHRvbTo2MHB4fS5sb2FkaW5nW2RhdGEtdi03MGM3ODA4Ml17YmFja2dyb3VuZDojMDAwO2hlaWdodDo0MDBweDtkaXNwbGF5OmZsZXh9LmxvYWRpbmcgLm1kLXByb2dyZXNzLXNwaW5uZXJbZGF0YS12LTcwYzc4MDgyXXttYXJnaW46YXV0b31cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///141\n')},142:function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(141);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(22).default\nvar update = add(\"f52556da\", content, true, {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3VpL2NsYXNzaWZ5L0NsYXNzaWZpZXJzLnZ1ZT83ODY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9taW5pbWl6ZSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi03MGM3ODA4MlxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwic291cmNlTWFwXFxcIjpmYWxzZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9DbGFzc2lmaWVycy52dWVcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIGFkZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiZjUyNTU2ZGFcIiwgY29udGVudCwgdHJ1ZSwge30pOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///142\n")},187:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/vue/dist/vue.runtime.esm.js\nvar vue_runtime_esm = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/vue-property-decorator/lib/vue-property-decorator.js\nvar vue_property_decorator = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/classify/classifiers/thumbspread.ts + 2 modules\nvar thumbspread = __webpack_require__(90);\n\n// CONCATENATED MODULE: ./src/classify/resolver.ts\n\nconst ClassifierRegistry = {\n    [thumbspread["b" /* ThumbSpreadClassifierId */]]: thumbspread["a" /* ThumbSpreadClassifier */]\n};\nconst ClassifyResolver = (config) => {\n    return new ClassifierRegistry[config.identifier](...config.args);\n};\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm5/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./src/ui/graphics/GraphicalHandLogger.vue + 8 modules\nvar GraphicalHandLogger = __webpack_require__(111);\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/utils/Code.vue\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\nlet Code_Code = class Code extends vue_runtime_esm["default"] {\n};\nCode_Code = __decorate([\n    Object(vue_property_decorator["a" /* Component */])({\n        components: {}\n    })\n], Code_Code);\n/* harmony default export */ var utils_Code = (Code_Code);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1f005ccb","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/utils/Code.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'span\',{staticClass:"source"},[_vm._t("default",[_vm._v("Code")])],2)}\nvar staticRenderFns = []\n\n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\nvar component_normalizer = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./src/ui/utils/Code.vue\nfunction injectStyle (context) {\n  __webpack_require__(138)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-1f005ccb"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = Object(component_normalizer["a" /* default */])(\n  utils_Code,\n  render,\n  staticRenderFns,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var ui_utils_Code = (Component.exports);\n\n// EXTERNAL MODULE: ./src/state/modules/classifiers.ts\nvar classifiers = __webpack_require__(93);\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/classify/ThumbSpreadClassifier.vue\nvar ThumbSpreadClassifier_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\n    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\nconst EVT_CLASSIFIER_SEL_UPDATED = "classifierSelectionUpdated";\nlet ThumbSpreadClassifier_ThumbSpreadClassifier = class ThumbSpreadClassifier extends vue_runtime_esm["default"] {\n    classifierSelectionUpdated() {\n        this.$emit(EVT_CLASSIFIER_SEL_UPDATED, "ThumbSpreadClassifier");\n    }\n    get thumbThreshhold() {\n        return this.config.threshhold;\n    }\n    set thumbThreshhold(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { threshhold: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get thumbWindowSize() {\n        return this.config.windowSize;\n    }\n    set thumbWindowSize(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { windowSize: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get thumbWindowInterval() {\n        return this.config.windowInterval;\n    }\n    set thumbWindowInterval(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { windowInterval: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get thumbSymmetryTolerance() {\n        return this.config.symmetryTolerance;\n    }\n    set thumbSymmetryTolerance(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { symmetryTolerance: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get thumbThrottleTime() {\n        return this.config.throttleTime;\n    }\n    set thumbThrottleTime(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { throttleTime: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get leapPointableIdentifier() {\n        return this.config.leapPointableIdentifier;\n    }\n    set leapPointableIdentifier(newValue) {\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: "ThumbSpreadClassifier",\n            newState: { leapPointableIdentifier: parseInt(newValue) }\n        });\n        this.classifierSelectionUpdated();\n    }\n    get thumbSpreadClassifierEnabled() {\n        return this.config.enabled;\n    }\n};\nThumbSpreadClassifier_decorate([\n    Object(vue_property_decorator["b" /* Prop */])(),\n    __metadata("design:type", Observable["a" /* Observable */])\n], ThumbSpreadClassifier_ThumbSpreadClassifier.prototype, "stream", void 0);\nThumbSpreadClassifier_decorate([\n    Object(vue_property_decorator["b" /* Prop */])(),\n    __metadata("design:type", Object)\n], ThumbSpreadClassifier_ThumbSpreadClassifier.prototype, "config", void 0);\nThumbSpreadClassifier_ThumbSpreadClassifier = ThumbSpreadClassifier_decorate([\n    Object(vue_property_decorator["a" /* Component */])({\n        components: {\n            GraphicalHandLogger: GraphicalHandLogger["a" /* default */],\n            "s-code": ui_utils_Code\n        }\n    })\n], ThumbSpreadClassifier_ThumbSpreadClassifier);\n/* harmony default export */ var classify_ThumbSpreadClassifier = (ThumbSpreadClassifier_ThumbSpreadClassifier);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-7410ac92","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/classify/ThumbSpreadClassifier.vue\nvar ThumbSpreadClassifier_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'md-card\',[_c(\'md-card-media\',[(_vm.stream !== undefined)?_c(\'graphical-hand-logger\',{attrs:{"camera-position":[10, 10, 10],"rotate":true,"source":_vm.stream}}):_c(\'div\',{staticClass:"loading"},[_c(\'md-progress-spinner\',{attrs:{"md-diameter":100,"md-stroke":10,"md-mode":"indeterminate"}})],1)],1),_vm._v(" "),_c(\'md-card-header\',[_c(\'div\',{staticClass:"md-title"},[_vm._v("Thumb Spread Classifier")]),_vm._v(" "),_c(\'div\',{staticClass:"md-subhead"},[_vm._v("Naive Spread detection soley based on virtualized Thumb position")]),_vm._v(" "),_c(\'div\',{staticClass:"enabled"},[_c(\'md-switch\',{staticClass:"md-accent",attrs:{"value":!_vm.thumbSpreadClassifierEnabled},on:{"change":_vm.classifierSelectionUpdated}},[_vm._v("Enable")])],1)]),_vm._v(" "),_c(\'md-card-content\',[_c(\'md-subheader\',[_vm._v("Classifier Description")]),_vm._v(" "),_c(\'section\',[_c(\'h1\',[_vm._v("General")]),_vm._v("\\n      Example Classifier initially provided with Theraleap. It does a naive classification of whether the User is spreading the Thumb. This classifier is intentionally very crude, as not much time was invested in its conception (development of classifiers is no integral part of the Theraleap student research project). Instead, this classifier is supposed to give a proof of concept of how classifiers are integrated and configured in Theraleap.\\n      "),_c(\'h1\',[_vm._v("Algorithm")]),_vm._v("\\n      This classifier detects the extension of the thumb. It does so naively simply by looking at the thumb position in a configurable timeframe ("),_c(\'s-code\',[_vm._v("window")]),_vm._v("). It first computes the difference between the maximum and minimum thumb positions in the timeframe. If (and only if) a significant decisive factor is determined (as configured by "),_c(\'s-code\',[_vm._v("detectionThreshhold")]),_vm._v("), the first derivative of the historic thumb positions is taken, and the first zero intersection is searched. Zero intersections of the first derivatives denote a change of direction. If a zero intersection is found in the first derivative, it is fuzzily (as configurable through "),_c(\'s-code\',[_vm._v("symmetryTolerance")]),_vm._v(") determined if the intersection is centered in the dataset. Finally, the detection may be throttled ("),_c(\'s-code\',[_vm._v("detectionThrottle")]),_vm._v(") in order to prevent duplicate detections.\\n      "),_c(\'h1\',[_vm._v("Performance Metric")]),_vm._v("\\n      This classifier includes no Performance Metric. Metrics based on a configurable maximum Spread distance are thinkable as a possible next step.\\n      "),_c(\'h1\',[_vm._v("Cheat Metric")]),_vm._v("\\n      This classifier includes no Cheat Metric.\\n      "),_c(\'h1\',[_vm._v("Room for Improvement")]),_vm._v("\\n      This classifier should be replaced with something more robust in the future. The most fundamental flaw currently is that the classification is done based on thumb position alone, now something that makes more sense like thumb / index angle. Also, it only works for the left hand, but making the classifier independent of handedness is trivial.\\n    ")],1),_vm._v(" "),_c(\'md-subheader\',[_vm._v("Classifier Settings")]),_vm._v(" "),_c(\'md-divider\'),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Window size")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.thumbWindowSize),callback:function ($$v) {_vm.thumbWindowSize=$$v},expression:"thumbWindowSize"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("How large the detection window should be. The bigger this number, the slower the thumb has to be spread.")])],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Interval")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.thumbWindowInterval),callback:function ($$v) {_vm.thumbWindowInterval=$$v},expression:"thumbWindowInterval"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("How often to slice a window from historic thumb positions and run the detection. For example, a number of 50 for Interval, and 200 for Window size will run the classifier every 50 frames, always with the last 200 Frames.")])],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Detection Threshhold")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.thumbThreshhold),callback:function ($$v) {_vm.thumbThreshhold=$$v},expression:"thumbThreshhold"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("How generously to move forward with the detection. The bigger this number, the further the thumb has to be spread.")])],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Symmetry Tolerance")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.thumbSymmetryTolerance),callback:function ($$v) {_vm.thumbSymmetryTolerance=$$v},expression:"thumbSymmetryTolerance"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("How far centered the thumb direction change should be. The bigger this number, the further the direction change may be off center (and thus, more false positives are detected).")])],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Throttle time")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.thumbThrottleTime),callback:function ($$v) {_vm.thumbThrottleTime=$$v},expression:"thumbThrottleTime"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("Timeframe which should be considered a single thumb spread. For example, if 4 actual classifications are made in this window, it will be only considered to be a single classification.")])],1),_vm._v(" "),_c(\'md-field\',[_c(\'label\',[_vm._v("Pointable Identifier")]),_vm._v(" "),_c(\'md-input\',{attrs:{"type":"number"},model:{value:(_vm.leapPointableIdentifier),callback:function ($$v) {_vm.leapPointableIdentifier=$$v},expression:"leapPointableIdentifier"}}),_vm._v(" "),_c(\'span\',{staticClass:"md-helper-text"},[_vm._v("You can also use this classifier for other extremities. 0 is Thumb, 1 is Index, and so on.")])],1)],1)],1)}\nvar ThumbSpreadClassifier_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/ui/classify/ThumbSpreadClassifier.vue\nfunction ThumbSpreadClassifier_injectStyle (context) {\n  __webpack_require__(140)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar ThumbSpreadClassifier_vue_template_functional_ = false\n/* styles */\nvar ThumbSpreadClassifier_vue_styles_ = ThumbSpreadClassifier_injectStyle\n/* scopeId */\nvar ThumbSpreadClassifier_vue_scopeId_ = "data-v-7410ac92"\n/* moduleIdentifier (server only) */\nvar ThumbSpreadClassifier_vue_module_identifier_ = null\n\nvar ThumbSpreadClassifier_Component = Object(component_normalizer["a" /* default */])(\n  classify_ThumbSpreadClassifier,\n  ThumbSpreadClassifier_render,\n  ThumbSpreadClassifier_staticRenderFns,\n  ThumbSpreadClassifier_vue_template_functional_,\n  ThumbSpreadClassifier_vue_styles_,\n  ThumbSpreadClassifier_vue_scopeId_,\n  ThumbSpreadClassifier_vue_module_identifier_\n)\n\n/* harmony default export */ var ui_classify_ThumbSpreadClassifier = (ThumbSpreadClassifier_Component.exports);\n\n// EXTERNAL MODULE: ./src/devices/facade.ts\nvar facade = __webpack_require__(94);\n\n// EXTERNAL MODULE: ./src/state/modules/device.ts\nvar device = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./node_modules/ts-loader?{"appendTsSuffixTo":[{}]}!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/ui/classify/Classifiers.vue\nvar Classifiers_decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\nlet Classifiers_Classifiers = class Classifiers extends vue_runtime_esm["default"] {\n    constructor() {\n        super(...arguments);\n        this.examples = {\n            ThumbSpreadClassifier: {\n                path: "/json/thera-rec-slow-thumb-spread.json"\n            }\n        };\n    }\n    async created() {\n        await Object.entries(this.examples).forEach(async ([key, data]) => {\n            const response = await fetch(data.path);\n            const recording = (await response.json());\n            vue_runtime_esm["default"].set(this.examples, key, Object.assign({}, this.examples.key, { stream: Object(facade["b" /* createFakeDeviceStream */])(recording) }));\n        });\n    }\n    classifierSelectionUpdated(activeClassifier) {\n        const currentClassifierState = this.classifierConfigState[activeClassifier]\n            .enabled;\n        Object(classifiers["b" /* disableAllClassifiers */])(this.$store);\n        Object(classifiers["e" /* modifyClassifier */])(this.$store, {\n            name: activeClassifier,\n            newState: { enabled: !currentClassifierState }\n        });\n        this.facade.updateClassifier(Object(classifiers["c" /* getActiveClassifier */])(this.$store));\n    }\n    get facade() {\n        return Object(device["e" /* getDeviceFacade */])(this.$store);\n    }\n    get classifiers() {\n        return Object.entries(ClassifierRegistry);\n    }\n    get classifierConfigState() {\n        return Object(classifiers["d" /* getClassifiers */])(this.$store);\n    }\n};\nClassifiers_Classifiers = Classifiers_decorate([\n    Object(vue_property_decorator["a" /* Component */])({\n        components: {\n            ThumbSpreadClassifier: ui_classify_ThumbSpreadClassifier\n        }\n    })\n], Classifiers_Classifiers);\n/* harmony default export */ var classify_Classifiers = (Classifiers_Classifiers);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-70c78082","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/ui/classify/Classifiers.vue\nvar Classifiers_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'section\',[_c(\'thumb-spread-classifier\',{attrs:{"stream":_vm.examples.ThumbSpreadClassifier.stream,"config":_vm.classifierConfigState.ThumbSpreadClassifier},on:{"classifierSelectionUpdated":_vm.classifierSelectionUpdated}})],1)}\nvar Classifiers_staticRenderFns = []\n\n// CONCATENATED MODULE: ./src/ui/classify/Classifiers.vue\nfunction Classifiers_injectStyle (context) {\n  __webpack_require__(142)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar Classifiers_vue_template_functional_ = false\n/* styles */\nvar Classifiers_vue_styles_ = Classifiers_injectStyle\n/* scopeId */\nvar Classifiers_vue_scopeId_ = "data-v-70c78082"\n/* moduleIdentifier (server only) */\nvar Classifiers_vue_module_identifier_ = null\n\nvar Classifiers_Component = Object(component_normalizer["a" /* default */])(\n  classify_Classifiers,\n  Classifiers_render,\n  Classifiers_staticRenderFns,\n  Classifiers_vue_template_functional_,\n  Classifiers_vue_styles_,\n  Classifiers_vue_scopeId_,\n  Classifiers_vue_module_identifier_\n)\n\n/* harmony default export */ var ui_classify_Classifiers = __webpack_exports__["default"] = (Classifiers_Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///187\n')}}]);